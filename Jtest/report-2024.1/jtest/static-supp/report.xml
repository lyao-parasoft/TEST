<?xml version='1.0' encoding='UTF-8'?><ResultsSession buildId="CICD_JavaProjectTemplate-2024-07-16" climode="true" endTime="2024-07-16T17:26:50+08:00" execEnv="win32_x86_64" hasViols="true" id="1721111900567" lang="en_US" machine="CD-LYAO-02" prjModule="javaprojecttemplate" project="CICD_JavaProjectTemplate" tag="luffy-javaprojecttemplate-${scontrol_branch}-win32_x86_64" time="2024-07-16T17:26:13+08:00" toolDispName="Jtest" toolId="jtest" toolName="DTP Engine for Java" toolVer="2024.1.1" user="lyao">
   <TestConfig machine="CD-LYAO-02" name="luffy" pseudoUrl="D:\reports\projects\javaprojecttemplate\luffy.properties" user="lyao"/>
   <Authors>
      <Author id="dev1" name="lyao"/>
   </Authors>
   <Analyzers>
      <Analyzer id="com.parasoft.jtest.globals.analyzer.GlobalsAnalyzer" name="Parasoft Globals Analyzer" ver="10.7.0.20240618"/>
      <Analyzer id="com.parasoft.jtest.flowanalyzer" name="Parasoft Java Flow Analyzer" ver="10.7.0.20240424B4736"/>
      <Analyzer id="com.parasoft.jtest.globals.ioc.springxml.analyzer.IOCAnalyzer" name="Parasoft IOC Analyzer" ver="10.7.0.20240618"/>
      <Analyzer id="com.parasoft.jtest.standards.checkers.xml" name="Parasoft XML Static Analyzer" ver="10.7.0.20240618"/>
      <Analyzer id="com.parasoft.jtest.standards.checkers.java" name="Parasoft Java Static Analyzer" ver="10.7.0.20240618"/>
      <Analyzer id="com.parasoft.jtest.standards.checkers.prop" name="Parasoft Properties Static Analyzer" ver="10.7.0.20240618"/>
      <Analyzer id="com.parasoft.jtest.standards.checkers.rulewizard" name="Parasoft RuleWizard Static Analyzer" ver="10.7.0.20240618"/>
   </Analyzers>
   <VersionInfos>
      <StorageInfo ownerId="" resultId="ISetupResult" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IExecutionViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IFunctionalViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IChangeImpactViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IUnitTestViolation" ver="1" ver10x="1"/>
   </VersionInfos>
   <Goals tsks="50">
      
   </Goals>
   <Scope>
      <Repositories/>
      <Locations>
         <Loc hash="1741334343" locRef="1" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" resProjPath="src/main/java/Calculator.java" totLns="27" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/Calculator.java"/>
         <Loc hash="-662881149" locRef="2" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" resProjPath="src/main/java/com/parasoft/Convertor.java" totLns="14" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java"/>
         <Loc hash="469181545" locRef="3" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" resProjPath="src/main/java/com/parasoft/another/Convertor.java" totLns="14" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java"/>
         <Loc accLns="0" hash="473374080" locRef="4" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" rejBy="Paths Filter" resProjPath="src/main/java/com/parasoft/differentViolations/GenerateViolations.java" totLns="15" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/com/parasoft/differentViolations/GenerateViolations.java"/>
         <Loc accLns="0" hash="-1706285489" locRef="5" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" rejBy="Paths Filter" resProjPath="src/main/java/com/parasoft/interfaces/IConvertor.java" totLns="5" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/com/parasoft/interfaces/IConvertor.java"/>
         <Loc accLns="0" hash="1200206342" locRef="6" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" rejBy="Paths Filter" resProjPath="src/main/java/com/parasoft/interfaces2/ICalculator.java" totLns="7" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java"/>
         <Loc accLns="0" hash="-1917579824" locRef="7" projId="javaprojecttemplate" projPath="/javaprojecttemplate" project="javaprojecttemplate" rejBy="Paths Filter" resProjPath="src/main/java/com/parasoft/nested/PhoneFactory.java" totLns="50" uri="file:/D:/reports/projects/javaprojecttemplate/src/main/java/com/parasoft/nested/PhoneFactory.java"/>
      </Locations>
   </Scope>
   
  <SetupProblems>
    <Problem msg="Some rules in test configuration are not supported in current Jtest version" sev="1" totErrs="1" type="MissingRulesSetupProblem">
      <ErrorList>
        <Error val="Flow Analysis [BD]: BD.PB.DEREF"/>
      </ErrorList>
    </Problem>
    <Problem msg="Configuration setup problems:" sev="1" totErrs="2" type="ConfigurationSetupProblem">
      <ErrorList>
        <Error val="The METRICS rule category is deprecated. Consider enabling code metrics in your test configuration."/>
        <Error val="The rule CODSTA.BP.PPAC has been removed. You can obtain similar results by enabling OPT.AAM in your test configuration."/>
      </ErrorList>
    </Problem>
    <Problem msg="The following dependencies do not exist:" sev="0" totErrs="2" type="DependencySetupProblem">
      <ErrorList>
        <Error val="D:\reports\projects\javaprojecttemplate/lib/junit-4.13.2.jar"/>
        <Error val="D:\reports\projects\javaprojecttemplate/lib/servlet-api-2.4.jar"/>
      </ErrorList>
    </Problem>
  </SetupProblems>

   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:30">
      <Projects>
         <Project bdCheckedFiles="0" bdTotalFiles="0" checkedFiles="3" checkedLns="55" id="javaprojecttemplate" name="javaprojecttemplate" qfixErrs="0" suppErrs="0" totErrs="51" totFiles="7" totLns="132"/>
      </Projects>
      
      
      <Rules>
         <CategoriesList>
            <Category authTot="0;" authUrg="0;" desc="DISA ASD STIG" name="APSC_DV" rules="1376" total="0">
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000510 The application must execute without excessive account permissions." name="APSC_DV.000510" rules="16" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001000 When using centralized logging; the application must include a unique identifier in order to distinguish itself from other application logs." name="APSC_DV.001000" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002530 The application must validate all input." name="APSC_DV.002530" rules="40" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002210 The application must set the HTTPOnly flag on session cookies." name="APSC_DV.002210" rules="1" total="0"/>
               <Category authTot="1;" authUrg="1;" desc="APSC_DV.002570 The application must generate error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries." name="APSC_DV.002570" rules="13" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002010 The application must implement NSA-approved cryptography to protect classified information in accordance with applicable federal laws, Executive Orders, directives, policies, regulations, and standards." name="APSC_DV.002010" rules="25" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002450 The application must implement cryptographic mechanisms to prevent unauthorized disclosure of information and/or detect changes to information during transmission unless otherwise protected by alternative physical safeguards, such as, at a minimum, a Protected Distribution System (PDS)." name="APSC_DV.002450" rules="30" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001680 The application must enforce a minimum 15-character password length." name="APSC_DV.001680" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001360 Application audit tools must be cryptographically hashed." name="APSC_DV.001360" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002250 Applications must use system-generated session identifiers that protect against session fixation." name="APSC_DV.002250" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002380 Applications must prevent unauthorized and unintended information transfer via shared system resources." name="APSC_DV.002380" rules="17" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000080 The application must automatically terminate the admin user session and log off admin users after a 10 minute idle time period is exceeded." name="APSC_DV.000080" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001290 The application must protect audit information from unauthorized modification." name="APSC_DV.001290" rules="20" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001995 The application must not be vulnerable to race conditions." name="APSC_DV.001995" rules="66" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001630 The application must implement replay-resistant authentication mechanisms for network access to non-privileged accounts." name="APSC_DV.001630" rules="5" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000500 The application must prevent non-privileged users from executing privileged functions to include disabling, circumventing, or altering implemented security safeguards/countermeasures." name="APSC_DV.000500" rules="18" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002400 The application must restrict the ability to launch Denial of Service (DoS) attacks against itself or other information systems." name="APSC_DV.002400" rules="1" total="0"/>
               <Category authTot="14;" authUrg="14;" desc="APSC_DV.003215 The application development team must follow a set of coding standards." name="APSC_DV.003215" rules="37" total="14"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000460 The application must enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies." name="APSC_DV.000460" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002520 The application must protect from canonical representation vulnerabilities." name="APSC_DV.002520" rules="40" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001750 The application must transmit only cryptographically-protected passwords." name="APSC_DV.001750" rules="40" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002000 The application must terminate all network connections associated with a communications session at the end of the session." name="APSC_DV.002000" rules="7" total="0"/>
               <Category authTot="1;" authUrg="1;" desc="APSC_DV.002440 The application must protect the confidentiality and integrity of transmitted information." name="APSC_DV.002440" rules="37" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000220 The application must ensure encrypted assertions, or equivalent confidentiality protections are used when assertion data is passed through an intermediary, and confidentiality of the assertion data is required when passing through the intermediary." name="APSC_DV.000220" rules="24" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002240 The application must destroy the session ID value and/or cookie on logoff or browser close." name="APSC_DV.002240" rules="2" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002560 The application must not be subject to input handling vulnerabilities." name="APSC_DV.002560" rules="45" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001350 The application must use cryptographic mechanisms to protect the integrity of audit information." name="APSC_DV.001350" rules="16" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002040 The application must utilize FIPS-validated cryptographic modules when protecting unclassified information that requires cryptographic protection." name="APSC_DV.002040" rules="25" total="0"/>
               <Category authTot="1;" authUrg="1;" desc="APSC_DV.002480 The application must not disclose unnecessary information to users." name="APSC_DV.002480" rules="48" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002490 The application must protect from Cross-Site Scripting (XSS) vulnerabilities." name="APSC_DV.002490" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000070 The application must automatically terminate the non-privileged user session and log off non-privileged users after a 15 minute idle time period has elapsed." name="APSC_DV.000070" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000190 Messages protected with WS_Security must use time stamps with creation and expiration times." name="APSC_DV.000190" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002290 The application must use the Federal Information Processing Standard (FIPS) 140-2-validated cryptographic modules and random number generator if the application implements encryption, key exchange, digital signature, and hash functionality." name="APSC_DV.002290" rules="30" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001620 The application must implement replay-resistant authentication mechanisms for network access to privileged accounts." name="APSC_DV.001620" rules="5" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000530 The application must enforce the limit of three consecutive invalid logon attempts by a user during a 15 minute time period." name="APSC_DV.000530" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001300 The application must protect audit information from unauthorized deletion." name="APSC_DV.001300" rules="20" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001740 The application must only store cryptographic representations of passwords." name="APSC_DV.001740" rules="11" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002510 The application must protect from command injection." name="APSC_DV.002510" rules="16" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001500 The application must be configured to disable non-essential capabilities." name="APSC_DV.001500" rules="8" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000010 The application must provide a capability to limit the number of logon sessions per user." name="APSC_DV.000010" rules="5" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001660 Service-Oriented Applications handling non-releasable data must authenticate endpoint devices via mutual SSL/TLS." name="APSC_DV.001660" rules="30" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002310 The application must fail to a secure state if system initialization fails, shutdown fails, or aborts fail." name="APSC_DV.002310" rules="5" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001860 The application must use mechanisms meeting the requirements of applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance for authentication to a cryptographic module." name="APSC_DV.001860" rules="26" total="0"/>
               <Category authTot="1;" authUrg="1;" desc="APSC_DV.000650 The application must not write sensitive data into the application logs." name="APSC_DV.000650" rules="7" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002550 The application must not be vulnerable to XML-oriented attacks." name="APSC_DV.002550" rules="11" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001540 The application must uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users)." name="APSC_DV.001540" rules="9" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000490 The application must enforce approved authorizations for controlling the flow of information between interconnected systems based on organization-defined information flow control policies." name="APSC_DV.000490" rules="23" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002350 The application must use appropriate cryptography in order to protect stored DoD information when required by the information owner or DoD policy." name="APSC_DV.002350" rules="31" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000170 The application must implement cryptographic mechanisms to protect the integrity of remote access sessions." name="APSC_DV.000170" rules="54" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002230 The application must not expose session IDs." name="APSC_DV.002230" rules="8" total="0"/>
               <Category authTot="1;" authUrg="1;" desc="APSC_DV.001460 An application vulnerability assessment must be conducted." name="APSC_DV.001460" rules="93" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002590 The application must not be vulnerable to overflow attacks." name="APSC_DV.002590" rules="6" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002030 The application must utilize FIPS-validated cryptographic modules when generating cryptographic hashes." name="APSC_DV.002030" rules="25" total="0"/>
               <Category authTot="1;" authUrg="1;" desc="APSC_DV.002470 The application must maintain the confidentiality and integrity of information during reception." name="APSC_DV.002470" rules="48" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002280 The application must not re-use or recycle session IDs." name="APSC_DV.002280" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000180 Applications with SOAP messages requiring integrity must include the following message elements:-Message ID-Service Request-Timestamp-SAML Assertion (optionally included in messages) and all elements of the message must be digitally signed." name="APSC_DV.000180" rules="9" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000520 The application must audit the execution of privileged functions." name="APSC_DV.000520" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000200 Validity periods must be verified on all application messages using WS-Security or SAML assertions." name="APSC_DV.000200" rules="10" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001850 The application must not display passwords/PINs as clear text." name="APSC_DV.001850" rules="40" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000840 The application must generate audit records for privileged activities or other system-level access." name="APSC_DV.000840" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002500 The application must protect from Cross-Site Request Forgery (CSRF) vulnerabilities." name="APSC_DV.002500" rules="4" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.003235 The application must not be subject to error handling vulnerabilities." name="APSC_DV.003235" rules="36" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002220 The application must set the secure flag on session cookies." name="APSC_DV.002220" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.001650 The application must authenticate all network connected endpoint devices before establishing any connection." name="APSC_DV.001650" rules="13" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002540 The application must not be vulnerable to SQL Injection." name="APSC_DV.002540" rules="1" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000160 The application must implement DoD-approved encryption to protect the confidentiality of remote access sessions." name="APSC_DV.000160" rules="53" total="0"/>
               <Category authTot="1;" authUrg="1;" desc="APSC_DV.002460 The application must maintain the confidentiality and integrity of information during preparation for transmission." name="APSC_DV.002460" rules="48" total="1"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002340 The application must implement approved cryptographic mechanisms to prevent unauthorized modification of organization-defined information at rest on organization-defined information system components." name="APSC_DV.002340" rules="30" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.003110 The application must not contain embedded authentication data." name="APSC_DV.003110" rules="12" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002260 Applications must validate session identifiers." name="APSC_DV.002260" rules="3" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.000480 The application must enforce approved authorizations for controlling the flow of information within the system based on organization-defined information flow control policies." name="APSC_DV.000480" rules="24" total="0"/>
               <Category authTot="0;" authUrg="0;" desc="APSC_DV.002390 XML-based applications must mitigate DoS attacks by using XML filters, parser options, or gateways." name="APSC_DV.002390" rules="14" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Coding Conventions" name="CODSTA" rules="112" total="0">
               <Category authTot="3;" authUrg="3;" desc="Poor Object Oriented Design" name="CODSTA.POD" rules="11" total="3"/>
               <Category authTot="7;" authUrg="7;" desc="Bad Practice" name="CODSTA.BP" rules="24" total="7"/>
               <Category authTot="3;" authUrg="3;" desc="Organization" name="CODSTA.ORG" rules="15" total="3"/>
               <Category authTot="0;" authUrg="0;" desc="Error-Prone Coding" name="CODSTA.EPC" rules="15" total="0"/>
               <Category authTot="3;" authUrg="3;" desc="Readability" name="CODSTA.READ" rules="39" total="3"/>
               <Category authTot="0;" authUrg="0;" desc="Overriding and Implementing Methods" name="CODSTA.OIM" rules="8" total="0"/>
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Eclipse Development" name="ECLIPSE" rules="3" total="0"/>
            <Category authTot="14;" authUrg="13;" desc="Global Static Analysis" name="GLOBAL" rules="23" total="14"/>
            <Category authTot="0;" authUrg="0;" desc="Property Files" name="PROPS" rules="17" total="0"/>
            <Category authTot="0;" authUrg="0;" desc="Serialization" name="SERIAL" rules="18" total="0"/>
         </CategoriesList>
         <RulesList>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000010" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="APSC_DV.000010.ISL" origId="SECURITY.WSC.ISL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000010" desc="Ensure proper session expiration" id="APSC_DV.000010.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000010" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.000010.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000010" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000010.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000010" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000010.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000070" desc="Ensure proper session expiration" id="APSC_DV.000070.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000070" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.000070.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000070" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000070.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000070" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000070.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000080" desc="Ensure proper session expiration" id="APSC_DV.000080.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000080" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.000080.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000080" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000080.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000080" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000080.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.000160.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000160.ADS" origId="SECURITY.UEC.ADS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000160.AELQ" origId="SECURITY.UEC.AELQ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.000160.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.000160.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.000160.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.000160.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.000160.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000160.DSL" origId="SECURITY.UEC.DSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.000160.DSR" origId="SECURITY.UEC.DSR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000160.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="APSC_DV.000160.FMCD" origId="SECURITY.UEC.FMCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.000160.HTTPS" origId="SECURITY.UEC.HTTPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.000160.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.000160.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.000160.ISOS" origId="SECURITY.UEC.ISOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.000160.LCA" origId="SECURITY.UEC.LCA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.000160.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Use hash functions with a salt" id="APSC_DV.000160.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.000160.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.000160.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.000160.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.000160.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.000160.RAJ" origId="SECURITY.UEC.RAJ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="APSC_DV.000160.REST" origId="SECURITY.UEC.REST" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000160.SDAR" origId="SECURITY.UEC.SDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Always specify error pages in web.xml" id="APSC_DV.000160.SEP" origId="SECURITY.UEC.SEP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Initialize KeyGenerator instances" id="APSC_DV.000160.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.000160.SLID" origId="SECURITY.UEC.SLID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using the SOAP Monitor module" id="APSC_DV.000160.SMM" origId="SECURITY.UEC.SMM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.000160.SRCD" origId="SECURITY.UEC.SRCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.000160.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Safely serialize sensitive data" id="APSC_DV.000160.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.000160.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000160.TDAR" origId="SECURITY.UEC.TDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.000160.UDC" origId="SECURITY.UEC.UDC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.000160.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.000160.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.000160.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCMI" origId="SECURITY.UEC.WCMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCMWS" origId="SECURITY.UEC.WCMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000160.WCUTS" origId="SECURITY.UEC.WCUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="APSC_DV.000160.WELC" origId="SECURITY.UEC.WELC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WMWS" origId="SECURITY.UEC.WMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.000160.WSS" origId="SECURITY.UEC.WSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000160" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000160.WUTS" origId="SECURITY.UEC.WUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.000170.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000170.ADS" origId="SECURITY.UEC.ADS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000170.AELQ" origId="SECURITY.UEC.AELQ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.000170.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.000170.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.000170.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.000170.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.000170.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.000170.DSL" origId="SECURITY.UEC.DSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.000170.DSR" origId="SECURITY.UEC.DSR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000170.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="APSC_DV.000170.FMCD" origId="SECURITY.UEC.FMCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.000170.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.000170.HTTPS" origId="SECURITY.UEC.HTTPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.000170.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.000170.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.000170.ISOS" origId="SECURITY.UEC.ISOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.000170.LCA" origId="SECURITY.UEC.LCA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.000170.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Use hash functions with a salt" id="APSC_DV.000170.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.000170.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.000170.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.000170.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.000170.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.000170.RAJ" origId="SECURITY.UEC.RAJ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="APSC_DV.000170.REST" origId="SECURITY.UEC.REST" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000170.SDAR" origId="SECURITY.UEC.SDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Always specify error pages in web.xml" id="APSC_DV.000170.SEP" origId="SECURITY.UEC.SEP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Initialize KeyGenerator instances" id="APSC_DV.000170.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.000170.SLID" origId="SECURITY.UEC.SLID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using the SOAP Monitor module" id="APSC_DV.000170.SMM" origId="SECURITY.UEC.SMM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.000170.SRCD" origId="SECURITY.UEC.SRCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.000170.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Safely serialize sensitive data" id="APSC_DV.000170.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.000170.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000170.TDAR" origId="SECURITY.UEC.TDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.000170.UDC" origId="SECURITY.UEC.UDC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.000170.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.000170.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.000170.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCMI" origId="SECURITY.UEC.WCMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCMWS" origId="SECURITY.UEC.WCMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000170.WCUTS" origId="SECURITY.UEC.WCUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="APSC_DV.000170.WELC" origId="SECURITY.UEC.WELC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WMWS" origId="SECURITY.UEC.WMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.000170.WSS" origId="SECURITY.UEC.WSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000170" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000170.WUTS" origId="SECURITY.UEC.WUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000180" desc="Avoid using the SOAP Monitor module" id="APSC_DV.000180.SMM" origId="SECURITY.UEC.SMM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000180" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000180.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000180" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000180.WCMI" origId="SECURITY.UEC.WCMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000180" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000180.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000180" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000180.WCMWS" origId="SECURITY.UEC.WCMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000180" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000180.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000180" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000180.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000180" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000180.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000180" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000180.WMWS" origId="SECURITY.UEC.WMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000190" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000190.WCMWS" origId="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000190" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000190.WMWS" origId="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000190" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.000190.WSS" origId="SECURITY.UEC.WSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000200" desc="Avoid using the SOAP Monitor module" id="APSC_DV.000200.SMM" origId="SECURITY.UEC.SMM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000200" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000200.WCMC" origId="SECURITY.UEC.WCMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000200" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000200.WCMI" origId="SECURITY.UEC.WCMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000200" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000200.WCMT" origId="SECURITY.UEC.WCMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000200" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000200.WCMWS" origId="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000200" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000200.WMC" origId="SECURITY.UEC.WMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000200" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000200.WMI" origId="SECURITY.UEC.WMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000200" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000200.WMT" origId="SECURITY.UEC.WMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000200" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000200.WMWS" origId="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000200" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.000200.WSS" origId="SECURITY.UEC.WSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.000220.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.000220.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.000220.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.000220.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.000220.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Do not disable CSRF protection" id="APSC_DV.000220.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Do not disable CSRF protection" id="APSC_DV.000220.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000220.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Ensure that Secure Processing is used" id="APSC_DV.000220.FXMLP" origId="SECURITY.WSC.FXMLP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.000220.HTTPS" origId="SECURITY.UEC.HTTPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.000220.ISOS" origId="SECURITY.UEC.ISOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.000220.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.000220.SDAR" origId="SECURITY.UEC.SDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Safely serialize sensitive data" id="APSC_DV.000220.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000220.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000220.WCMI" origId="SECURITY.UEC.WCMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000220.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.000220.WCMWS" origId="SECURITY.UEC.WCMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000220.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000220.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000220.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000220.WMWS" origId="SECURITY.UEC.WMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.000220.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000220" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.000220.WSS" origId="SECURITY.UEC.WSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.000460.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.000460.LCA" origId="SECURITY.UEC.LCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Avoid EJB 3 methods without security annotations" id="APSC_DV.000460.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.000460.RAJ" origId="SECURITY.UEC.RAJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.000460.SRCD" origId="SECURITY.UEC.SRCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000460" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.000460.UDC" origId="SECURITY.UEC.UDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Inspect usage of standard API calls that bypass security" id="APSC_DV.000480.APIBS" origId="SECURITY.WSC.APIBS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Keep all authentication methods centralized to enforce consistency" id="APSC_DV.000480.CAM" origId="SECURITY.WSC.CAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Do not define custom SecurityManager's" id="APSC_DV.000480.DCSM" origId="SECURITY.WSC.DCSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Do not disable CSRF protection" id="APSC_DV.000480.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Do not disable CSRF protection" id="APSC_DV.000480.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Do not set custom security managers outside of the 'main' method" id="APSC_DV.000480.DSSM" origId="SECURITY.BV.DSSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="APSC_DV.000480.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.000480.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.000480.LCA" origId="SECURITY.UEC.LCA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Call authentication methods to enforce consistency" id="APSC_DV.000480.PAC" origId="SECURITY.WSC.PAC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Ensure sufficient protection against multiple failed authentication attempts" id="APSC_DV.000480.PBFA" origId="SECURITY.WSC.PBFA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Avoid EJB 3 methods without security annotations" id="APSC_DV.000480.PERMIT" origId="EJB.EJB3.PERMIT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Ensure that methods annotated with @RequestMapping specify the HTTP request method they call" id="APSC_DV.000480.REQMAP" origId="SPRING.REQMAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Enforce 'SecurityManager' checks before setting or getting fields" id="APSC_DV.000480.SCF" origId="SECURITY.WSC.SCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Enforce 'SecurityManager' checks in methods of 'Cloneable' classes" id="APSC_DV.000480.SCLONE" origId="SECURITY.WSC.SCLONE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Enforce 'SecurityManager' checks in methods of 'Serializable' classes" id="APSC_DV.000480.SCSER" origId="SECURITY.WSC.SCSER" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Ensure 'SecurityManager' check in constructor of &quot;public&quot; non-&quot;final&quot; sensitive type" id="APSC_DV.000480.SCSM" origId="SECURITY.WSC.SCSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Do not set or create a new SecurityManager in EJBs" id="APSC_DV.000480.SMSN" origId="EJB.SMSN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Ensure 'SecurityManager' checks before 'Socket' transfers or retrievals" id="APSC_DV.000480.SMSTR" origId="SECURITY.WSC.SMSTR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.000480.SRCD" origId="SECURITY.UEC.SRCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Ensure that an appropriate security manager is set" id="APSC_DV.000480.SSM" origId="SECURITY.WSC.SSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Protect against SQL injection" id="APSC_DV.000480.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.000480.UDC" origId="SECURITY.UEC.UDC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000480" desc="Avoid 'main()' methods because they may allow unauthorized access to classes" id="APSC_DV.000480.UMAIN" origId="SECURITY.WSC.UMAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Inspect usage of standard API calls that bypass security" id="APSC_DV.000490.APIBS" origId="SECURITY.WSC.APIBS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Keep all authentication methods centralized to enforce consistency" id="APSC_DV.000490.CAM" origId="SECURITY.WSC.CAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Do not define custom SecurityManager's" id="APSC_DV.000490.DCSM" origId="SECURITY.WSC.DCSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Do not disable CSRF protection" id="APSC_DV.000490.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Do not disable CSRF protection" id="APSC_DV.000490.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Do not set custom security managers outside of the 'main' method" id="APSC_DV.000490.DSSM" origId="SECURITY.BV.DSSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="APSC_DV.000490.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.000490.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.000490.LCA" origId="SECURITY.UEC.LCA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Call authentication methods to enforce consistency" id="APSC_DV.000490.PAC" origId="SECURITY.WSC.PAC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Ensure sufficient protection against multiple failed authentication attempts" id="APSC_DV.000490.PBFA" origId="SECURITY.WSC.PBFA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Avoid EJB 3 methods without security annotations" id="APSC_DV.000490.PERMIT" origId="EJB.EJB3.PERMIT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Ensure that methods annotated with @RequestMapping specify the HTTP request method they call" id="APSC_DV.000490.REQMAP" origId="SPRING.REQMAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Enforce 'SecurityManager' checks before setting or getting fields" id="APSC_DV.000490.SCF" origId="SECURITY.WSC.SCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Enforce 'SecurityManager' checks in methods of 'Cloneable' classes" id="APSC_DV.000490.SCLONE" origId="SECURITY.WSC.SCLONE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Enforce 'SecurityManager' checks in methods of 'Serializable' classes" id="APSC_DV.000490.SCSER" origId="SECURITY.WSC.SCSER" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Ensure 'SecurityManager' check in constructor of &quot;public&quot; non-&quot;final&quot; sensitive type" id="APSC_DV.000490.SCSM" origId="SECURITY.WSC.SCSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Do not set or create a new SecurityManager in EJBs" id="APSC_DV.000490.SMSN" origId="EJB.SMSN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Ensure 'SecurityManager' checks before 'Socket' transfers or retrievals" id="APSC_DV.000490.SMSTR" origId="SECURITY.WSC.SMSTR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.000490.SRCD" origId="SECURITY.UEC.SRCD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Ensure that an appropriate security manager is set" id="APSC_DV.000490.SSM" origId="SECURITY.WSC.SSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.000490.UDC" origId="SECURITY.UEC.UDC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000490" desc="Avoid 'main()' methods because they may allow unauthorized access to classes" id="APSC_DV.000490.UMAIN" origId="SECURITY.WSC.UMAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Avoid using anonymous &quot;privileged&quot; classes when invoking &quot;AccessController.doPrivileged()&quot;" id="APSC_DV.000500.ACDP" origId="SECURITY.WSC.ACDP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Only call &quot;final&quot; methods from specified code blocks in non-&quot;final&quot; classes" id="APSC_DV.000500.CFM" origId="SECURITY.WSC.CFM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="APSC_DV.000500.DPANY" origId="EJB.DPANY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Method getPermission() is supposed to be invoked when user-defined class loaders are applied" id="APSC_DV.000500.GETPERM" origId="BD.PB.GETPERM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Avoid setting the write or execute file permissions to unintended users" id="APSC_DV.000500.IDP" origId="SECURITY.WSC.IDP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Limit the number of &quot;AccessController.doPrivileged&quot; calls per class" id="APSC_DV.000500.LDP" origId="SECURITY.EAB.LDP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Validate shortcut target paths before use" id="APSC_DV.000500.LNK" origId="SECURITY.WSC.LNK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' &quot;final&quot;" id="APSC_DV.000500.PAF" origId="SECURITY.WSC.PAF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Declare subclasses of 'Permission' and 'BasicPermission' &quot;final&quot;" id="APSC_DV.000500.PBPSF" origId="SECURITY.WSC.PBPSF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Wrap &quot;privileged&quot; method invocations in &quot;final&quot; methods" id="APSC_DV.000500.PCFM" origId="SECURITY.BV.PCFM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Limit the number of lines in &quot;privileged&quot; code blocks" id="APSC_DV.000500.PCL" origId="SECURITY.EAB.PCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Wrap &quot;privileged&quot; method invocations in &quot;private&quot; methods" id="APSC_DV.000500.PCPM" origId="SECURITY.BV.PCPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Avoid using dynamically loaded classes in &quot;privileged&quot; code blocks" id="APSC_DV.000500.PDLC" origId="SECURITY.BV.PDLC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Ensure that all Permissions, PrivilegedActions, and PrivilegedActionExceptions are declared in the same package" id="APSC_DV.000500.PPKG" origId="SECURITY.WSC.PPKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Avoid operating on tainted data in privileged blocks" id="APSC_DV.000500.PRIVIL" origId="BD.SECURITY.PRIVIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations &quot;final&quot;" id="APSC_DV.000500.PRMF" origId="SECURITY.WSC.PRMF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Protect against LDAP injection" id="APSC_DV.000500.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000500" desc="Protect against Reflection injection" id="APSC_DV.000500.TDRFL" origId="BD.SECURITY.TDRFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Avoid using anonymous &quot;privileged&quot; classes when invoking &quot;AccessController.doPrivileged()&quot;" id="APSC_DV.000510.ACDP" origId="SECURITY.WSC.ACDP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="APSC_DV.000510.DPANY" origId="EJB.DPANY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Method getPermission() is supposed to be invoked when user-defined class loaders are applied" id="APSC_DV.000510.GETPERM" origId="BD.PB.GETPERM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Avoid setting the write or execute file permissions to unintended users" id="APSC_DV.000510.IDP" origId="SECURITY.WSC.IDP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Validate shortcut target paths before use" id="APSC_DV.000510.LNK" origId="SECURITY.WSC.LNK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' &quot;final&quot;" id="APSC_DV.000510.PAF" origId="SECURITY.WSC.PAF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Declare subclasses of 'Permission' and 'BasicPermission' &quot;final&quot;" id="APSC_DV.000510.PBPSF" origId="SECURITY.WSC.PBPSF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Wrap &quot;privileged&quot; method invocations in &quot;final&quot; methods" id="APSC_DV.000510.PCFM" origId="SECURITY.BV.PCFM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Limit the number of lines in &quot;privileged&quot; code blocks" id="APSC_DV.000510.PCL" origId="SECURITY.EAB.PCL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Wrap &quot;privileged&quot; method invocations in &quot;private&quot; methods" id="APSC_DV.000510.PCPM" origId="SECURITY.BV.PCPM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Avoid using dynamically loaded classes in &quot;privileged&quot; code blocks" id="APSC_DV.000510.PDLC" origId="SECURITY.BV.PDLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Ensure that all Permissions, PrivilegedActions, and PrivilegedActionExceptions are declared in the same package" id="APSC_DV.000510.PPKG" origId="SECURITY.WSC.PPKG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Avoid operating on tainted data in privileged blocks" id="APSC_DV.000510.PRIVIL" origId="BD.SECURITY.PRIVIL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations &quot;final&quot;" id="APSC_DV.000510.PRMF" origId="SECURITY.WSC.PRMF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Protect against LDAP injection" id="APSC_DV.000510.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000510" desc="Protect against Reflection injection" id="APSC_DV.000510.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000520" desc="Ensure all sensitive method invocations are logged" id="APSC_DV.000520.ENFL" origId="SECURITY.BV.ENFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000530" desc="Ensure sufficient protection against multiple failed authentication attempts" id="APSC_DV.000530.PBFA" origId="SECURITY.WSC.PBFA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Do not log confidential or sensitive information" id="APSC_DV.000650.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Ensure all sensitive method invocations are logged" id="APSC_DV.000650.ENFL" origId="SECURITY.BV.ENFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="APSC_DV.000650.LHII" origId="HIBERNATE.LHII" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="APSC_DV.000650.PEO" origId="SECURITY.ESD.PEO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Prevent exposure of sensitive data" id="APSC_DV.000650.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.000650" desc="Avoid passing sensitive data to functions that write to log files" id="APSC_DV.000650.SENSLOG" origId="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="APSC_DV.000650" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="APSC_DV.000650.SIO" origId="SECURITY.ESD.SIO" sev="2" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.000840" desc="Ensure all sensitive method invocations are logged" id="APSC_DV.000840.ENFL" origId="SECURITY.BV.ENFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001000" desc="Avoid using multiple loggers, use logging levels instead" id="APSC_DV.001000.AUML" origId="CODSTA.BP.AUML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Prevent the scripting API from executing untrusted code" id="APSC_DV.001290.ASAPI" origId="SECURITY.WSC.ASAPI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Avoid untrusted input when logging messages with Seam Logging API" id="APSC_DV.001290.DCEMSL" origId="SECURITY.UEHL.DCEMSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Disable XML external entity injection" id="APSC_DV.001290.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Avoid passing unvalidated binary data to log methods" id="APSC_DV.001290.LOG" origId="BD.SECURITY.LOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against Command injection" id="APSC_DV.001290.TDCMD" origId="BD.SECURITY.TDCMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against Jakarta Digester injection" id="APSC_DV.001290.TDDIG" origId="BD.SECURITY.TDDIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against Environment injection" id="APSC_DV.001290.TDENV" origId="BD.SECURITY.TDENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against File contents injection" id="APSC_DV.001290.TDFILES" origId="BD.SECURITY.TDFILES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against File names injection" id="APSC_DV.001290.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against JXPath injection" id="APSC_DV.001290.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against LDAP injection" id="APSC_DV.001290.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against Library injection" id="APSC_DV.001290.TDLIB" origId="BD.SECURITY.TDLIB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against log forging" id="APSC_DV.001290.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against network resource injection" id="APSC_DV.001290.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against Reflection injection" id="APSC_DV.001290.TDRFL" origId="BD.SECURITY.TDRFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against SQL injection" id="APSC_DV.001290.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against XML data injection" id="APSC_DV.001290.TDXML" origId="BD.SECURITY.TDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Protect against XPath injection" id="APSC_DV.001290.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Validate objects before deserialization" id="APSC_DV.001290.VOBD" origId="SERIAL.VOBD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001290" desc="Avoid XPath injection when evaluating XPath queries" id="APSC_DV.001290.XPIJ" origId="SECURITY.IBA.XPIJ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Prevent the scripting API from executing untrusted code" id="APSC_DV.001300.ASAPI" origId="SECURITY.WSC.ASAPI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Avoid untrusted input when logging messages with Seam Logging API" id="APSC_DV.001300.DCEMSL" origId="SECURITY.UEHL.DCEMSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Disable XML external entity injection" id="APSC_DV.001300.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Avoid passing unvalidated binary data to log methods" id="APSC_DV.001300.LOG" origId="BD.SECURITY.LOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against Command injection" id="APSC_DV.001300.TDCMD" origId="BD.SECURITY.TDCMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against Jakarta Digester injection" id="APSC_DV.001300.TDDIG" origId="BD.SECURITY.TDDIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against Environment injection" id="APSC_DV.001300.TDENV" origId="BD.SECURITY.TDENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against File contents injection" id="APSC_DV.001300.TDFILES" origId="BD.SECURITY.TDFILES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against File names injection" id="APSC_DV.001300.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against JXPath injection" id="APSC_DV.001300.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against LDAP injection" id="APSC_DV.001300.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against Library injection" id="APSC_DV.001300.TDLIB" origId="BD.SECURITY.TDLIB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against log forging" id="APSC_DV.001300.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against network resource injection" id="APSC_DV.001300.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against Reflection injection" id="APSC_DV.001300.TDRFL" origId="BD.SECURITY.TDRFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against SQL injection" id="APSC_DV.001300.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against XML data injection" id="APSC_DV.001300.TDXML" origId="BD.SECURITY.TDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Protect against XPath injection" id="APSC_DV.001300.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Validate objects before deserialization" id="APSC_DV.001300.VOBD" origId="SERIAL.VOBD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001300" desc="Avoid XPath injection when evaluating XPath queries" id="APSC_DV.001300.XPIJ" origId="SECURITY.IBA.XPIJ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.001350.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.001350.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.001350.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.001350.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.001350.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001350.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.001350.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.001350.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.001350.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.001350.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.001350.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Use hash functions with a salt" id="APSC_DV.001350.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Initialize KeyGenerator instances" id="APSC_DV.001350.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Safely serialize sensitive data" id="APSC_DV.001350.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001350.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001350" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001350.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001360" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.001360.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001360" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.001360.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001360" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.001360.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001360" desc="Use hash functions with a salt" id="APSC_DV.001360.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="APSC_DV.001460.ACPST" origId="SECURITY.WSC.ACPST" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="APSC_DV.001460.AECB" origId="PB.TYPO.AECB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.001460.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.001460.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.001460.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid parsing untrusted data with XMLDecoder" id="APSC_DV.001460.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Canonicalize data before validation" id="APSC_DV.001460.CDBV" origId="SECURITY.IBA.CDBV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not log confidential or sensitive information" id="APSC_DV.001460.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not disable CSRF protection" id="APSC_DV.001460.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not disable CSRF protection" id="APSC_DV.001460.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid duplicated forms in the 'validation.xml'" id="APSC_DV.001460.DFV" origId="STRUTS.DFV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using the DriverManagerDataSource class in production code" id="APSC_DV.001460.DMDS" origId="SECURITY.WSC.DMDS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid DNS lookups for decision making" id="APSC_DV.001460.DNSL" origId="SECURITY.WSC.DNSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="APSC_DV.001460.DPANY" origId="EJB.DPANY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="APSC_DV.001460.DUID" origId="SERIAL.DUID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Disable XML external entity injection" id="APSC_DV.001460.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure all sensitive method invocations are logged" id="APSC_DV.001460.ENFL" origId="SECURITY.BV.ENFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure arguments passed to certain methods come from predefined methods list" id="APSC_DV.001460.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure validators are enabled in the 'struts-config.xml'" id="APSC_DV.001460.EV" origId="STRUTS.EV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid debug information from Spring Security framework to logs" id="APSC_DV.001460.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.001460.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not hard-code IP addresses and port numbers" id="APSC_DV.001460.HCNA" origId="PORT.HCNA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.001460.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="APSC_DV.001460.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.001460.HTTPS" origId="SECURITY.UEC.HTTPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.001460.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.001460.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="APSC_DV.001460.ISL" origId="SECURITY.WSC.ISL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="APSC_DV.001460.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Restrict cross-origin resource sharing to secure origins" id="APSC_DV.001460.JXCORS" origId="SECURITY.WSC.JXCORS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure all exceptions are either logged with a standard logger or rethrown" id="APSC_DV.001460.LGE" origId="SECURITY.UEHL.LGE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes" id="APSC_DV.001460.MASP" origId="PB.API.MASP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.001460.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use hash functions with a salt" id="APSC_DV.001460.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not catch exception types which are too general or are unchecked exceptions" id="APSC_DV.001460.NCE" origId="CODSTA.EPC.NCE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not catch 'NullPointerException'" id="APSC_DV.001460.NCNPE" origId="EXCEPT.NCNPE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not throw exception types which are too general or are unchecked exceptions" id="APSC_DV.001460.NTERR" origId="EXCEPT.NTERR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid declaring methods to throw general or unchecked Exception types" id="APSC_DV.001460.NTX" origId="CODSTA.BP.NTX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure method arguments are serializable" id="APSC_DV.001460.ONS" origId="PB.API.ONS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes" id="APSC_DV.001460.OROM" origId="SECURITY.EAB.OROM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure sufficient protection against multiple failed authentication attempts" id="APSC_DV.001460.PBFA" origId="SECURITY.WSC.PBFA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always specify absolute paths to execute commands" id="APSC_DV.001460.PBRTE" origId="SECURITY.WSC.PBRTE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001460.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="APSC_DV.001460.PEO" origId="SECURITY.ESD.PEO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Password information should not be included in properties file in plaintext" id="APSC_DV.001460.PLAIN" origId="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid storing sensitive data in plaintext in a cookie" id="APSC_DV.001460.PLC" origId="SECURITY.ESD.PLC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure Plugins are added in the 'struts-config.xml'" id="APSC_DV.001460.PLUGIN" origId="STRUTS.PLUGIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001460.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001460.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001460.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not declare entity beans as remote" id="APSC_DV.001460.RR" origId="EJB.RR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Define a &quot;readResolve&quot; method for all instances of Serializable types" id="APSC_DV.001460.RRSC" origId="SERIAL.RRSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure proper session expiration" id="APSC_DV.001460.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="APSC_DV.001460.RWAF" origId="SERIAL.RWAF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Disable LDAP deserialization" id="APSC_DV.001460.SC" origId="SECURITY.IBA.SC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents" id="APSC_DV.001460.SCBNP" origId="SERIAL.SCBNP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Prevent exposure of sensitive data" id="APSC_DV.001460.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always specify error pages in web.xml" id="APSC_DV.001460.SEP" origId="SECURITY.UEC.SEP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Initialize KeyGenerator instances" id="APSC_DV.001460.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="APSC_DV.001460" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="APSC_DV.001460.SIO" origId="SECURITY.ESD.SIO" sev="2" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.001460.SLID" origId="SECURITY.UEC.SLID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not store non-serializable objects as HttpSession attributes" id="APSC_DV.001460.SNSO" origId="SERIAL.SNSO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.001460.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not declare the 'readObject()' method as &quot;synchronized&quot;" id="APSC_DV.001460.SROS" origId="SERIAL.SROS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Safely serialize sensitive data" id="APSC_DV.001460.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.001460.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Command injection" id="APSC_DV.001460.TDCMD" origId="BD.SECURITY.TDCMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Jakarta Digester injection" id="APSC_DV.001460.TDDIG" origId="BD.SECURITY.TDDIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Environment injection" id="APSC_DV.001460.TDENV" origId="BD.SECURITY.TDENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against File contents injection" id="APSC_DV.001460.TDFILES" origId="BD.SECURITY.TDFILES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against File names injection" id="APSC_DV.001460.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Exclude unsanitized user input from format strings" id="APSC_DV.001460.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against JXPath injection" id="APSC_DV.001460.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against LDAP injection" id="APSC_DV.001460.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Library injection" id="APSC_DV.001460.TDLIB" origId="BD.SECURITY.TDLIB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against log forging" id="APSC_DV.001460.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against network resource injection" id="APSC_DV.001460.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against using unprotected credentials" id="APSC_DV.001460.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against HTTP response splitting" id="APSC_DV.001460.TDRESP" origId="BD.SECURITY.TDRESP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against Reflection injection" id="APSC_DV.001460.TDRFL" origId="BD.SECURITY.TDRFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Do not store untrusted data in HTTP session" id="APSC_DV.001460.TDSESSION" origId="BD.SECURITY.TDSESSION" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against SQL injection" id="APSC_DV.001460.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against XPath injection" id="APSC_DV.001460.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Protect against XSS vulnerabilities" id="APSC_DV.001460.TDXSS" origId="BD.SECURITY.TDXSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="APSC_DV.001460.UOSC" origId="SECURITY.WSC.UOSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="APSC_DV.001460.UPS" origId="SECURITY.IBA.UPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.001460.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.001460.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Always verify JarFile signatures" id="APSC_DV.001460.VJFS" origId="SECURITY.WSC.VJFS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Validate objects before deserialization" id="APSC_DV.001460.VOBD" origId="SERIAL.VOBD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Properly validate server identity" id="APSC_DV.001460.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001460.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001460" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001460.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001500" desc="Avoid granting access permission for EJB methods to the 'ANYONE' role" id="APSC_DV.001500.DPANY" origId="EJB.DPANY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001500" desc="Method getPermission() is supposed to be invoked when user-defined class loaders are applied" id="APSC_DV.001500.GETPERM" origId="BD.PB.GETPERM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001500" desc="Avoid setting the write or execute file permissions to unintended users" id="APSC_DV.001500.IDP" origId="SECURITY.WSC.IDP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001500" desc="Validate shortcut target paths before use" id="APSC_DV.001500.LNK" origId="SECURITY.WSC.LNK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001500" desc="Declare subclasses of 'Permission' and 'BasicPermission' &quot;final&quot;" id="APSC_DV.001500.PBPSF" origId="SECURITY.WSC.PBPSF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001500" desc="Ensure that all Permissions, PrivilegedActions, and PrivilegedActionExceptions are declared in the same package" id="APSC_DV.001500.PPKG" origId="SECURITY.WSC.PPKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001500" desc="Protect against LDAP injection" id="APSC_DV.001500.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001500" desc="Protect against Reflection injection" id="APSC_DV.001500.TDRFL" origId="BD.SECURITY.TDRFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001540" desc="Keep all authentication methods centralized to enforce consistency" id="APSC_DV.001540.CAM" origId="SECURITY.WSC.CAM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001540" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="APSC_DV.001540.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001540" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.001540.LCA" origId="SECURITY.UEC.LCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001540" desc="Call authentication methods to enforce consistency" id="APSC_DV.001540.PAC" origId="SECURITY.WSC.PAC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001540" desc="Avoid EJB 3 methods without security annotations" id="APSC_DV.001540.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001540" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.001540.SRCD" origId="SECURITY.UEC.SRCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001540" desc="Protect against using unprotected credentials" id="APSC_DV.001540.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001540" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.001540.UDC" origId="SECURITY.UEC.UDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001540" desc="Avoid 'main()' methods because they may allow unauthorized access to classes" id="APSC_DV.001540.UMAIN" origId="SECURITY.WSC.UMAIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001620" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001620.TDAR" origId="SECURITY.UEC.TDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001620" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001620.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001620" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001620.WCUTS" origId="SECURITY.UEC.WCUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001620" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001620.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001620" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001620.WUTS" origId="SECURITY.UEC.WUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001630" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001630.TDAR" origId="SECURITY.UEC.TDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001630" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001630.WCMT" origId="SECURITY.UEC.WCMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001630" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001630.WCUTS" origId="SECURITY.UEC.WCUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001630" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001630.WMT" origId="SECURITY.UEC.WMT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001630" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001630.WUTS" origId="SECURITY.UEC.WUTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Keep all authentication methods centralized to enforce consistency" id="APSC_DV.001650.CAM" origId="SECURITY.WSC.CAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Do not disable CSRF protection" id="APSC_DV.001650.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Do not disable CSRF protection" id="APSC_DV.001650.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="APSC_DV.001650.HCCS" origId="SECURITY.WSC.HCCS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="APSC_DV.001650.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.001650.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.001650.LCA" origId="SECURITY.UEC.LCA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Call authentication methods to enforce consistency" id="APSC_DV.001650.PAC" origId="SECURITY.WSC.PAC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Ensure sufficient protection against multiple failed authentication attempts" id="APSC_DV.001650.PBFA" origId="SECURITY.WSC.PBFA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Ensure that methods annotated with @RequestMapping specify the HTTP request method they call" id="APSC_DV.001650.REQMAP" origId="SPRING.REQMAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Do not rely on the default automatic signature verification provided by URLClassLoader and java.util.jar" id="APSC_DV.001650.SIGCLASS" origId="BD.SECURITY.SIGCLASS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.001650.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001650" desc="Properly validate server identity" id="APSC_DV.001650.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.001660.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.001660.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.001660.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.001660.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.001660.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.001660.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Do not disable CSRF protection" id="APSC_DV.001660.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.001660.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.001660.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Do not rely on IP addresses obtained from HTTP request headers for authentication" id="APSC_DV.001660.HTTPRHA" origId="SECURITY.WSC.HTTPRHA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.001660.HTTPS" origId="SECURITY.UEC.HTTPS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.001660.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.001660.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="APSC_DV.001660.ISL" origId="SECURITY.WSC.ISL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Restrict cross-origin resource sharing to secure origins" id="APSC_DV.001660.JXCORS" origId="SECURITY.WSC.JXCORS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.001660.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Use hash functions with a salt" id="APSC_DV.001660.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Ensure proper session expiration" id="APSC_DV.001660.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Do not rely on the default automatic signature verification provided by URLClassLoader and java.util.jar" id="APSC_DV.001660.SIGCLASS" origId="BD.SECURITY.SIGCLASS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Initialize KeyGenerator instances" id="APSC_DV.001660.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Protect against HTTP response splitting" id="APSC_DV.001660.TDRESP" origId="BD.SECURITY.TDRESP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.001660.USC" origId="SECURITY.WSC.USC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Encapsulate all redirect and forward URLs with a validation function" id="APSC_DV.001660.VRD" origId="SECURITY.IBA.VRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Properly validate server identity" id="APSC_DV.001660.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001660.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001660.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001660.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001660.WMI" origId="SECURITY.UEC.WMI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001660.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001660" desc="Use secure communication with 'wss' (WebSocket Secure) instead of 'ws'" id="APSC_DV.001660.WS" origId="SECURITY.ESD.WS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001680" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="APSC_DV.001680.MLVP" origId="STRUTS.MLVP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.001740.AUNC" origId="SECURITY.WSC.AUNC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001740.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Password information should not be included in properties file in plaintext" id="APSC_DV.001740.PLAIN" origId="PROPS.PLAIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid storing sensitive data in plaintext in a cookie" id="APSC_DV.001740.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001740.PTPT" origId="SECURITY.UEC.PTPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001740.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001740.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.001740.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.001740.UTAX" origId="SECURITY.UEC.UTAX" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001740.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001740" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001740.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001750.ADS" origId="SECURITY.UEC.ADS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001750.AELQ" origId="SECURITY.UEC.AELQ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001750.DSL" origId="SECURITY.UEC.DSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.001750.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001750.EDAR" origId="SECURITY.UEC.EDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="APSC_DV.001750.FMCD" origId="SECURITY.UEC.FMCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.001750.HTTPS" origId="SECURITY.UEC.HTTPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.001750.ISOS" origId="SECURITY.UEC.ISOS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.001750.LCA" origId="SECURITY.UEC.LCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001750.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001750.PTPT" origId="SECURITY.UEC.PTPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001750.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001750.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.001750.RAJ" origId="SECURITY.UEC.RAJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="APSC_DV.001750.REST" origId="SECURITY.UEC.REST" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001750.SDAR" origId="SECURITY.UEC.SDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Always specify error pages in web.xml" id="APSC_DV.001750.SEP" origId="SECURITY.UEC.SEP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.001750.SLID" origId="SECURITY.UEC.SLID" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid using the SOAP Monitor module" id="APSC_DV.001750.SMM" origId="SECURITY.UEC.SMM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.001750.SRCD" origId="SECURITY.UEC.SRCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.001750.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001750.TDAR" origId="SECURITY.UEC.TDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.001750.UDC" origId="SECURITY.UEC.UDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.001750.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.001750.USC" origId="SECURITY.WSC.USC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.001750.UTAX" origId="SECURITY.UEC.UTAX" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCMC" origId="SECURITY.UEC.WCMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCMI" origId="SECURITY.UEC.WCMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCMT" origId="SECURITY.UEC.WCMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCMWS" origId="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001750.WCUTS" origId="SECURITY.UEC.WCUTS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="APSC_DV.001750.WELC" origId="SECURITY.UEC.WELC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WMC" origId="SECURITY.UEC.WMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WMI" origId="SECURITY.UEC.WMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WMT" origId="SECURITY.UEC.WMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WMWS" origId="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.001750.WSS" origId="SECURITY.UEC.WSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001750" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001750.WUTS" origId="SECURITY.UEC.WUTS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that 'axis.development.system' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001850.ADS" origId="SECURITY.UEC.ADS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that 'axis.enableListQuery' is set to &quot;false&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001850.AELQ" origId="SECURITY.UEC.AELQ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that 'axis.disableServiceList' is set to &quot;true&quot; in Axis 'server-config.wsdd' files" id="APSC_DV.001850.DSL" origId="SECURITY.UEC.DSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid defining multiple security roles with the same name in 'web.xml' files" id="APSC_DV.001850.DSR" origId="SECURITY.UEC.DSR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001850.EDAR" origId="SECURITY.UEC.EDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that each filter mapped in a 'web.xml' file has a corresponding definition" id="APSC_DV.001850.FMCD" origId="SECURITY.UEC.FMCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Use 'https' instead of 'http' for the 'transportReceiver' and 'transportSender' in 'axis2.xml' configuration files" id="APSC_DV.001850.HTTPS" origId="SECURITY.UEC.HTTPS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that 'InflowSecurity' and 'OutflowSecurity' parameters are specified in Axis2 configuration files" id="APSC_DV.001850.ISOS" origId="SECURITY.UEC.ISOS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Include an appropriate '&lt;login-config>' element to specify the type of authentication to be performed in 'web.xml' files" id="APSC_DV.001850.LCA" origId="SECURITY.UEC.LCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001850.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001850.PTPT" origId="SECURITY.UEC.PTPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001850.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001850.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Restrict access to JSPs in 'web.xml' files by including a security constraint for '*.jsp' files" id="APSC_DV.001850.RAJ" origId="SECURITY.UEC.RAJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that &quot;REST&quot; is disabled in 'axis2.xml' configuration files" id="APSC_DV.001850.REST" origId="SECURITY.UEC.REST" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that the 'Signature' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001850.SDAR" origId="SECURITY.UEC.SDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Always specify error pages in web.xml" id="APSC_DV.001850.SEP" origId="SECURITY.UEC.SEP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.001850.SLID" origId="SECURITY.UEC.SLID" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid using the SOAP Monitor module" id="APSC_DV.001850.SMM" origId="SECURITY.UEC.SMM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that each security role referenced in a 'web.xml' file has a corresponding definition" id="APSC_DV.001850.SRCD" origId="SECURITY.UEC.SRCD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.001850.STTL" origId="SECURITY.UEC.STTL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that the 'Timestamp' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001850.TDAR" origId="SECURITY.UEC.TDAR" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.001850.UDC" origId="SECURITY.UEC.UDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.001850.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Use the SSL-enabled version of classes when possible" id="APSC_DV.001850.USC" origId="SECURITY.WSC.USC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.001850.UTAX" origId="SECURITY.UEC.UTAX" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCMC" origId="SECURITY.UEC.WCMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCMI" origId="SECURITY.UEC.WCMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCMT" origId="SECURITY.UEC.WCMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCMWS" origId="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001850.WCUTS" origId="SECURITY.UEC.WCUTS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure all web content directories                                 have a &quot;welcome file&quot;" id="APSC_DV.001850.WELC" origId="SECURITY.UEC.WELC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WMC" origId="SECURITY.UEC.WMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure SOAP messages are digitally signed in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WMI" origId="SECURITY.UEC.WMI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid misconfiguring timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WMT" origId="SECURITY.UEC.WMT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WMWS" origId="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Ensure that the Rampart WS-Security module is enabled in Axis2 configuration files" id="APSC_DV.001850.WSS" origId="SECURITY.UEC.WSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001850" desc="Avoid unsigned timestamps in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001850.WUTS" origId="SECURITY.UEC.WUTS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.001860.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.001860.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.001860.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.001860.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.001860.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.001860.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.001860.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.001860.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.001860.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.001860.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.001860.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.001860.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Use hash functions with a salt" id="APSC_DV.001860.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.001860.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.001860.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001860.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.001860.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Initialize KeyGenerator instances" id="APSC_DV.001860.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.001860.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Safely serialize sensitive data" id="APSC_DV.001860.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.001860.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.001860.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001860.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.001860.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001860.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.001860" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.001860.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not use Atomic variables when always accessed in synchronized manner" id="APSC_DV.001995.AIL" origId="TRS.AIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not use 'notify()'; use 'notifyAll()' instead so that all waiting threads will be notified" id="APSC_DV.001995.ANF" origId="TRS.ANF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid accidental use of &quot;Thread.interrupted()&quot;" id="APSC_DV.001995.ATI" origId="TRS.ATI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not use variables of the unsafe type 'java.lang.ThreadGroup'" id="APSC_DV.001995.AUTG" origId="TRS.AUTG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not use 'Thread.yield()' because it may behave differently under different Virtual Machines" id="APSC_DV.001995.AUTY" origId="TRS.AUTY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Prevent external processes from blocking on output or error streams" id="APSC_DV.001995.BUSSB" origId="SECURITY.WSC.BUSSB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid invoking methods using &quot;static&quot; 'Calendar', 'DateFormat', or 'SimpleDateFormat'" id="APSC_DV.001995.CDF" origId="TRS.CDF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Only call &quot;final&quot; methods from specified code blocks in non-&quot;final&quot; classes" id="APSC_DV.001995.CFM" origId="SECURITY.WSC.CFM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Use ConcurrentHashMap instead of Hashtable and &quot;synchronizedMap&quot; wrapped HashMap when possible" id="APSC_DV.001995.CHM" origId="TRS.CHM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not catch InterruptedException except in classes extending Thread" id="APSC_DV.001995.CIET" origId="TRS.CIET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Unrestricted lock resource" id="APSC_DV.001995.CLOSE" origId="PB.CLOSE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Use ConcurrentLinkedQueue instead of Vector and synchronizedList when possible" id="APSC_DV.001995.CLQ" origId="TRS.CLQ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid compound synchronized collection accesses which violate atomicity" id="APSC_DV.001995.CMA" origId="TRS.CMA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not cause deadlocks by calling a &quot;synchronized&quot; method from a &quot;synchronized&quot; method" id="APSC_DV.001995.CSFS" origId="TRS.CSFS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not call the &quot;start&quot; method of threads from inside a constructor" id="APSC_DV.001995.CSTART" origId="TRS.CSTART" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not let &quot;this&quot; reference escape during construction" id="APSC_DV.001995.CTRE" origId="TRS.CTRE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid unsafe implementations of the &quot;double-checked locking&quot; pattern" id="APSC_DV.001995.DCL" origId="TRS.DCL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Variable should be used in context of single critical section" id="APSC_DV.001995.DIFCS" origId="BD.TRS.DIFCS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid double locking" id="APSC_DV.001995.DLOCK" origId="BD.TRS.DLOCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not use DiscardOldestPolicy with PriorityBlockingQueue" id="APSC_DV.001995.DOPQ" origId="TRS.DOPQ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not use &quot;Runtime.exec()&quot;" id="APSC_DV.001995.EXEC" origId="PORT.EXEC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Inspect accesses to &quot;static&quot; fields which may require synchronization" id="APSC_DV.001995.IASF" origId="TRS.IASF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Make lazy initializations thread-safe" id="APSC_DV.001995.ILI" origId="TRS.ILI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not use an instance lock to protect shared static data" id="APSC_DV.001995.INSTLOCK" origId="BD.TRS.INSTLOCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Implement Runnable instead of extending Thread" id="APSC_DV.001995.IRET" origId="TRS.IRET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not call the 'run()' method directly on classes extending 'java.lang.Thread' or implementing 'java.lang.Runnable'" id="APSC_DV.001995.IRUN" origId="TRS.IRUN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not call the 'start()' method directly on Thread class instances" id="APSC_DV.001995.ISTART" origId="TRS.ISTART" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not abandon unreleased locks" id="APSC_DV.001995.LOCK" origId="BD.TRS.LOCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Ensure that nested locks are ordered correctly" id="APSC_DV.001995.LORD" origId="TRS.LORD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Access related Atomic variables in a synchronized block" id="APSC_DV.001995.MRAV" origId="TRS.MRAV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Give subclasses of Thread a 'run()' method so they can run as separate threads" id="APSC_DV.001995.MRUN" origId="TRS.MRUN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Ensure threads are named" id="APSC_DV.001995.NAME" origId="TRS.NAME" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Use &quot;synchronized&quot; blocks instead of making the whole method declaration &quot;synchronized&quot;" id="APSC_DV.001995.NSM" origId="TRS.NSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not use static variables in servlets without synchronization" id="APSC_DV.001995.NSSS" origId="SERVLET.NSSS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Ensure 'wait()', 'notify()' and 'notifyAll()' are invoked on an object that is clearly synchronized in its enclosing mod scope" id="APSC_DV.001995.NSYN" origId="TRS.NSYN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not acquire locks in different order" id="APSC_DV.001995.ORDER" origId="BD.TRS.ORDER" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid overriding synchronized methods with non-synchronized methods" id="APSC_DV.001995.OSNS" origId="TRS.OSNS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Prevent external processes from blocking on input and output streams" id="APSC_DV.001995.PBIOS" origId="BD.PB.PBIOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Release Locks in a &quot;finally&quot; block" id="APSC_DV.001995.RLF" origId="TRS.RLF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Use synchronization on methods that implement 'Runnable.run()'" id="APSC_DV.001995.RUN" origId="TRS.RUN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not synchronize on constant Strings" id="APSC_DV.001995.SCS" origId="TRS.SCS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not synchronize on the class object returned by the 'getClass' method" id="APSC_DV.001995.SGC" origId="TRS.SGC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not mix &quot;static&quot; and non-&quot;static&quot; &quot;synchronized&quot; methods" id="APSC_DV.001995.SNSM" origId="TRS.SNSM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not synchronize on a collection view if the backing collection is accessible" id="APSC_DV.001995.SOBC" origId="TRS.SOBC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not perform synchronization using the &quot;synchronized&quot; keyword on implementations of &quot;java.util.concurrent.locks.Lock&quot;" id="APSC_DV.001995.SOL" origId="TRS.SOL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not synchronize on &quot;public&quot; fields since doing so may cause deadlocks" id="APSC_DV.001995.SOPF" origId="TRS.SOPF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not synchronize on non-final fields since doing so makes it difficult to guarantee mutual exclusion" id="APSC_DV.001995.SOUF" origId="TRS.SOUF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Manually synchronize on 'synchronized' collections when iterating over them" id="APSC_DV.001995.SSCI" origId="TRS.SSCI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Synchronize access to &quot;static&quot; SimpleDataFormats" id="APSC_DV.001995.SSDF" origId="TRS.SSDF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Make the get method for a field synchronized if the set method is synchronized" id="APSC_DV.001995.SSUG" origId="TRS.SSUG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not perform synchronization nor call semaphore methods on an Object's 'this' reference" id="APSC_DV.001995.STR" origId="TRS.STR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Minimize synchronization in Servlets" id="APSC_DV.001995.SYN" origId="SERVLET.SYN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not use threads in web components" id="APSC_DV.001995.THR" origId="SECURITY.DRC.THR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'" id="APSC_DV.001995.THRD" origId="TRS.THRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid starting, stopping, or managing threads in any way in bean classes" id="APSC_DV.001995.THREAD" origId="EJB.THREAD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid Time-of-check Time-of-use (TOCTOU) Race Condition" id="APSC_DV.001995.TOCTOU" origId="PB.CUB.TOCTOU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not use blocking methods while holding a lock" id="APSC_DV.001995.TSHL" origId="BD.TRS.TSHL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not call 'Thread.sleep()' while holding a lock since doing so can cause poor performance and deadlocks" id="APSC_DV.001995.TSHLTRS" origId="TRS.TSHL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Avoid unsynchronized accesses of &quot;Collections.synchronized&quot; wrapped Collections" id="APSC_DV.001995.UACS" origId="TRS.UACS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Use unsynchronized Collections/Maps only when safe" id="APSC_DV.001995.UCM" origId="TRS.UCM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Use the same locking object to access variables" id="APSC_DV.001995.USL" origId="TRS.USL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not start a thread without specifying a 'run()' method" id="APSC_DV.001995.UT" origId="TRS.UT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Call 'wait()' and 'await()' only inside a loop that tests the liveness condition" id="APSC_DV.001995.UWIL" origId="TRS.UWIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Use 'wait()' and 'notifyAll()' instead of polling loops" id="APSC_DV.001995.UWNA" origId="TRS.UWNA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Use the correct method calls on &quot;java.util.concurrent.locks.Condition&quot; objects" id="APSC_DV.001995.WOC" origId="TRS.WOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.001995" desc="Do not make the &quot;writeObject()&quot; method synchronized if no other method is synchronized" id="APSC_DV.001995.WOS" origId="TRS.WOS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002000" desc="Close JDBC connections in &quot;finally&quot; blocks" id="APSC_DV.002000.CDBC" origId="JDBC.CDBC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002000" desc="Close Hibernate Sessions in &quot;finally&quot; blocks" id="APSC_DV.002000.CHS" origId="HIBERNATE.CHS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002000" desc="Close JDBC objects in the correct order" id="APSC_DV.002000.COCO" origId="JDBC.COCO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002000" desc="Ensure resources are deallocated" id="APSC_DV.002000.LEAKS" origId="BD.RES.LEAKS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002000" desc="Prevent potential memory leaks in ObjectOutputStreams by calling 'reset()'" id="APSC_DV.002000.OSTM" origId="GC.OSTM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002000" desc="Ensure proper session expiration" id="APSC_DV.002000.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002000" desc="Ensure that sessions are configured to time out in 'web.xml' files" id="APSC_DV.002000.STTL" origId="SECURITY.UEC.STTL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.002010.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002010.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002010.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002010.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.002010.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.002010.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.002010.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.002010.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002010.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002010.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002010.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.002010.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Use hash functions with a salt" id="APSC_DV.002010.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.002010.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.002010.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002010.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002010.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Initialize KeyGenerator instances" id="APSC_DV.002010.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Safely serialize sensitive data" id="APSC_DV.002010.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.002010.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.002010.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002010.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002010.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002010.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002010" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002010.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.002030.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002030.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002030.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002030.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.002030.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.002030.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.002030.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.002030.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002030.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002030.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002030.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.002030.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Use hash functions with a salt" id="APSC_DV.002030.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.002030.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.002030.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002030.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002030.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Initialize KeyGenerator instances" id="APSC_DV.002030.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Safely serialize sensitive data" id="APSC_DV.002030.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.002030.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.002030.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002030.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002030.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002030.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002030" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002030.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.002040.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002040.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002040.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002040.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.002040.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.002040.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.002040.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.002040.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002040.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002040.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002040.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.002040.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Use hash functions with a salt" id="APSC_DV.002040.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.002040.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.002040.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002040.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002040.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Initialize KeyGenerator instances" id="APSC_DV.002040.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Safely serialize sensitive data" id="APSC_DV.002040.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.002040.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.002040.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002040.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002040.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002040.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002040" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002040.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002210" desc="Mark cookies as HttpOnly" id="APSC_DV.002210.SCHTTP" origId="SECURITY.WSC.SCHTTP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002220" desc="Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies" id="APSC_DV.002220.UOSC" origId="SECURITY.WSC.UOSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002230" desc="Do not access, use, or create a class loader within a bean class" id="APSC_DV.002230.ACL" origId="EJB.ACL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002230" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002230.HGRSI" origId="SECURITY.WSC.HGRSI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002230" desc="Do not use types from the &quot;java.io&quot; package within bean classes" id="APSC_DV.002230.JIO" origId="EJB.JIO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002230" desc="Avoid loading native libraries in a Bean class" id="APSC_DV.002230.LNL" origId="EJB.LNL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002230" desc="Avoid EJB 3 methods without security annotations" id="APSC_DV.002230.PERMIT" origId="EJB.EJB3.PERMIT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002230" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.002230.SLID" origId="SECURITY.UEC.SLID" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002230" desc="Do not set or create a new SecurityManager in EJBs" id="APSC_DV.002230.SMSN" origId="EJB.SMSN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002230" desc="Do not store untrusted data in HTTP session" id="APSC_DV.002230.TDSESSION" origId="BD.SECURITY.TDSESSION" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002240" desc="Close Hibernate Sessions in &quot;finally&quot; blocks" id="APSC_DV.002240.CHS" origId="HIBERNATE.CHS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002240" desc="Close all 'SessionFactory' objects" id="APSC_DV.002240.CSF" origId="HIBERNATE.CSF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002250" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="APSC_DV.002250.ISL" origId="SECURITY.WSC.ISL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002250" desc="Ensure proper session expiration" id="APSC_DV.002250.RUIM" origId="SECURITY.IBA.RUIM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002250" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.002250.SLID" origId="SECURITY.UEC.SLID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002250" desc="Do not store untrusted data in HTTP session" id="APSC_DV.002250.TDSESSION" origId="BD.SECURITY.TDSESSION" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002260" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002260.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002260" desc="Ensure Session-ID Length is sufficient" id="APSC_DV.002260.SLID" origId="SECURITY.UEC.SLID" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002260" desc="Properly validate server identity" id="APSC_DV.002260.VSI" origId="SECURITY.WSC.VSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002280" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="APSC_DV.002280.ISL" origId="SECURITY.WSC.ISL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.002290.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002290.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002290.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002290.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.002290.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.002290.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.002290.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Ensure arguments passed to certain methods come from predefined methods list" id="APSC_DV.002290.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.002290.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002290.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002290.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002290.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="APSC_DV.002290.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.002290.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Use hash functions with a salt" id="APSC_DV.002290.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Use the 'nextInt()' method to generate a random integer" id="APSC_DV.002290.NIVND" origId="OPT.NIVND" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.002290.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.002290.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002290.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002290.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Initialize KeyGenerator instances" id="APSC_DV.002290.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.002290.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Safely serialize sensitive data" id="APSC_DV.002290.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid improper casting of the results of the 'next' methods in the 'java.util.Random' class" id="APSC_DV.002290.UNI" origId="PB.API.UNI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.002290.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.002290.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002290.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002290.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002290.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002290" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002290.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002310" desc="Do not exit &quot;finally&quot; blocks abruptly" id="APSC_DV.002310.ATSF" origId="PB.CUB.ATSF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002310" desc="Prevent external processes from blocking on output or error streams" id="APSC_DV.002310.BUSSB" origId="SECURITY.WSC.BUSSB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002310" desc="Catch all &quot;Throwable&quot; objects which may be thrown in the body of certain methods" id="APSC_DV.002310.CATO" origId="EXCEPT.CATO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002310" desc="Be cautious when calling methods which may cause memory leaks" id="APSC_DV.002310.MML" origId="GC.MML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002310" desc="Avoid division by zero" id="APSC_DV.002310.ZERO" origId="BD.PB.ZERO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.002340.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002340.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002340.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002340.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.002340.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.002340.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.002340.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Ensure arguments passed to certain methods come from predefined methods list" id="APSC_DV.002340.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.002340.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002340.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002340.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002340.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="APSC_DV.002340.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.002340.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Use hash functions with a salt" id="APSC_DV.002340.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Use the 'nextInt()' method to generate a random integer" id="APSC_DV.002340.NIVND" origId="OPT.NIVND" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.002340.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.002340.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002340.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002340.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Initialize KeyGenerator instances" id="APSC_DV.002340.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.002340.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Safely serialize sensitive data" id="APSC_DV.002340.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid improper casting of the results of the 'next' methods in the 'java.util.Random' class" id="APSC_DV.002340.UNI" origId="PB.API.UNI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.002340.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.002340.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002340.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002340.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002340.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002340" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002340.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.002350.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002350.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002350.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002350.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.002350.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.002350.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.002350.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Ensure arguments passed to certain methods come from predefined methods list" id="APSC_DV.002350.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.002350.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002350.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002350.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Do not use initialization circularities for fields" id="APSC_DV.002350.IC" origId="INIT.IC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002350.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="APSC_DV.002350.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.002350.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Use hash functions with a salt" id="APSC_DV.002350.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Use the 'nextInt()' method to generate a random integer" id="APSC_DV.002350.NIVND" origId="OPT.NIVND" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.002350.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.002350.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002350.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002350.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Initialize KeyGenerator instances" id="APSC_DV.002350.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.002350.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Safely serialize sensitive data" id="APSC_DV.002350.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid improper casting of the results of the 'next' methods in the 'java.util.Random' class" id="APSC_DV.002350.UNI" origId="PB.API.UNI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.002350.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.002350.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002350.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002350.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002350.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002350" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002350.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Close all &quot;java.io.Closeable&quot; resources in a &quot;finally&quot; block" id="APSC_DV.002380.CCR" origId="OPT.CCR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Close input and output resources in &quot;finally&quot; blocks" id="APSC_DV.002380.CIO" origId="OPT.CIO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Close JDBC objects in the correct order" id="APSC_DV.002380.COCO" origId="JDBC.COCO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Close resources as early as possible" id="APSC_DV.002380.CRWD" origId="OPT.CRWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Ensure that file target paths retrieved by resolving symbolic links are safe" id="APSC_DV.002380.FOLLOW" origId="SECURITY.WSC.FOLLOW" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Do not use resources that have been freed" id="APSC_DV.002380.FREE" origId="BD.RES.FREE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Avoid setting the write or execute file permissions to unintended users" id="APSC_DV.002380.IDP" origId="SECURITY.WSC.IDP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Restrict cross-origin resource sharing to secure origins" id="APSC_DV.002380.JXCORS" origId="SECURITY.WSC.JXCORS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Ensure resources are deallocated" id="APSC_DV.002380.LEAKS" origId="BD.RES.LEAKS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Be cautious when calling methods which may cause memory leaks" id="APSC_DV.002380.MML" origId="GC.MML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Prevent potential memory leaks in ObjectOutputStreams by calling 'reset()'" id="APSC_DV.002380.OSTM" origId="GC.OSTM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="APSC_DV.002380.PEO" origId="SECURITY.ESD.PEO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Close JDBC resources in &quot;finally&quot; blocks" id="APSC_DV.002380.RRWD" origId="JDBC.RRWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Prevent exposure of sensitive data" id="APSC_DV.002380.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Protect against File names injection" id="APSC_DV.002380.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Protect against network resource injection" id="APSC_DV.002380.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002380" desc="Protect against Reflection injection" id="APSC_DV.002380.TDRFL" origId="BD.SECURITY.TDRFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Process XML and HTML with a library instead of raw text" id="APSC_DV.002390.ARXML" origId="SECURITY.WSC.ARXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Avoid parsing untrusted data with XMLDecoder" id="APSC_DV.002390.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Do not disable CSRF protection" id="APSC_DV.002390.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Do not disable CSRF protection" id="APSC_DV.002390.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Disable XML external entity injection" id="APSC_DV.002390.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Encapsulate arguments of dangerous methods with a validation method" id="APSC_DV.002390.EACM" origId="BD.SECURITY.EACM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Ensure that Secure Processing is used" id="APSC_DV.002390.FXMLP" origId="SECURITY.WSC.FXMLP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Use library methods for string replacements of special characters in HTML and XML" id="APSC_DV.002390.STREP" origId="SECURITY.WSC.STREP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Protect against File names injection" id="APSC_DV.002390.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Protect against JXPath injection" id="APSC_DV.002390.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Protect against XML data injection" id="APSC_DV.002390.TDXML" origId="BD.SECURITY.TDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Protect against XPath injection" id="APSC_DV.002390.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Ensure that XML files are well-formatted" id="APSC_DV.002390.WF" origId="XML.WF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002390" desc="Validate untrusted XML using schema or DTD before reading" id="APSC_DV.002390.XMLVAL" origId="BD.SECURITY.XMLVAL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002400" desc="Protect against network resource injection" id="APSC_DV.002400.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.002440.ACMD" origId="SECURITY.WSC.ACMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid hard-coding the arguments to certain methods" id="APSC_DV.002440.AHCA" origId="SECURITY.WSC.AHCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002440.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002440.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002440.AUNC" origId="SECURITY.WSC.AUNC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Only call &quot;final&quot; methods from specified code blocks in non-&quot;final&quot; classes" id="APSC_DV.002440.CFM" origId="SECURITY.WSC.CFM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Do not log confidential or sensitive information" id="APSC_DV.002440.CONSEN" origId="SECURITY.ESD.CONSEN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Clear sensitive data after use" id="APSC_DV.002440.CSD" origId="SECURITY.ESD.CSD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.002440.HCCK" origId="SECURITY.WSC.HCCK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="APSC_DV.002440.HCCS" origId="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Do not hard-code IP addresses and port numbers" id="APSC_DV.002440.HCNA" origId="PORT.HCNA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002440.ICA" origId="SECURITY.WSC.ICA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="APSC_DV.002440.LHII" origId="HIBERNATE.LHII" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.002440.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="APSC_DV.002440.PEO" origId="SECURITY.ESD.PEO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Password information should not be included in properties file in plaintext" id="APSC_DV.002440.PLAIN" origId="PROPS.PLAIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid storing sensitive data in plaintext in a cookie" id="APSC_DV.002440.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.002440.PTPT" origId="SECURITY.UEC.PTPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002440.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002440.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Ensure 'SecurityManager' check in constructor of &quot;public&quot; non-&quot;final&quot; sensitive type" id="APSC_DV.002440.SCSM" origId="SECURITY.WSC.SCSM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Store sensitive data in mutable objects" id="APSC_DV.002440.SDM" origId="SECURITY.ESD.SDM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Prevent exposure of sensitive data" id="APSC_DV.002440.SENS" origId="BD.SECURITY.SENS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid passing sensitive data to functions that write to log files" id="APSC_DV.002440.SENSLOG" origId="BD.SECURITY.SENSLOG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Inspect instance fields of serializable objects to make sure they will not expose sensitive information" id="APSC_DV.002440.SIF" origId="SECURITY.ESD.SIF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="APSC_DV.002440" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="APSC_DV.002440.SIO" origId="SECURITY.ESD.SIO" sev="1" total="1"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Safely serialize sensitive data" id="APSC_DV.002440.SSSD" origId="BD.SECURITY.SSSD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Protect against Jakarta Digester injection" id="APSC_DV.002440.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Protect against JXPath injection" id="APSC_DV.002440.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Protect against XPath injection" id="APSC_DV.002440.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.002440.UDC" origId="SECURITY.UEC.UDC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.002440.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.002440.UTAX" origId="SECURITY.UEC.UTAX" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002440.WCMC" origId="SECURITY.UEC.WCMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002440.WCMWS" origId="SECURITY.UEC.WCMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002440.WMC" origId="SECURITY.UEC.WMC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002440" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002440.WMWS" origId="SECURITY.UEC.WMWS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.002450.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002450.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002450.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002450.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.002450.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.002450.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.002450.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Ensure arguments passed to certain methods come from predefined methods list" id="APSC_DV.002450.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.002450.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002450.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002450.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002450.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="APSC_DV.002450.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.002450.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Use hash functions with a salt" id="APSC_DV.002450.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Use the 'nextInt()' method to generate a random integer" id="APSC_DV.002450.NIVND" origId="OPT.NIVND" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.002450.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.002450.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002450.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002450.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Initialize KeyGenerator instances" id="APSC_DV.002450.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.002450.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Safely serialize sensitive data" id="APSC_DV.002450.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid improper casting of the results of the 'next' methods in the 'java.util.Random' class" id="APSC_DV.002450.UNI" origId="PB.API.UNI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.002450.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.002450.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002450.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002450.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002450.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002450" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002450.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.002460.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid hard-coding the arguments to certain methods" id="APSC_DV.002460.AHCA" origId="SECURITY.WSC.AHCA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002460.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002460.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002460.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.002460.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.002460.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Do not log confidential or sensitive information" id="APSC_DV.002460.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Clear sensitive data after use" id="APSC_DV.002460.CSD" origId="SECURITY.ESD.CSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.002460.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Ensure arguments passed to certain methods come from predefined methods list" id="APSC_DV.002460.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.002460.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002460.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002460.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002460.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="APSC_DV.002460.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="APSC_DV.002460.LHII" origId="HIBERNATE.LHII" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.002460.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Use hash functions with a salt" id="APSC_DV.002460.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="APSC_DV.002460.MLVP" origId="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Use the 'nextInt()' method to generate a random integer" id="APSC_DV.002460.NIVND" origId="OPT.NIVND" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.002460.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="APSC_DV.002460.PEO" origId="SECURITY.ESD.PEO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid storing sensitive data in plaintext in a cookie" id="APSC_DV.002460.PLC" origId="SECURITY.ESD.PLC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.002460.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002460.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002460.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Store sensitive data in mutable objects" id="APSC_DV.002460.SDM" origId="SECURITY.ESD.SDM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Prevent exposure of sensitive data" id="APSC_DV.002460.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid passing sensitive data to functions that write to log files" id="APSC_DV.002460.SENSLOG" origId="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Inspect instance fields of serializable objects to make sure they will not expose sensitive information" id="APSC_DV.002460.SIF" origId="SECURITY.ESD.SIF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Initialize KeyGenerator instances" id="APSC_DV.002460.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="APSC_DV.002460" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="APSC_DV.002460.SIO" origId="SECURITY.ESD.SIO" sev="2" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.002460.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Safely serialize sensitive data" id="APSC_DV.002460.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Protect against Jakarta Digester injection" id="APSC_DV.002460.TDDIG" origId="BD.SECURITY.TDDIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Protect against JXPath injection" id="APSC_DV.002460.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Protect against XPath injection" id="APSC_DV.002460.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.002460.UDC" origId="SECURITY.UEC.UDC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid improper casting of the results of the 'next' methods in the 'java.util.Random' class" id="APSC_DV.002460.UNI" origId="PB.API.UNI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.002460.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.002460.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002460.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002460.WCMWS" origId="SECURITY.UEC.WCMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002460.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002460.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002460.WMWS" origId="SECURITY.UEC.WMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002460" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002460.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.002470.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid hard-coding the arguments to certain methods" id="APSC_DV.002470.AHCA" origId="SECURITY.WSC.AHCA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002470.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002470.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002470.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.002470.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.002470.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Do not log confidential or sensitive information" id="APSC_DV.002470.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Clear sensitive data after use" id="APSC_DV.002470.CSD" origId="SECURITY.ESD.CSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.002470.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Ensure arguments passed to certain methods come from predefined methods list" id="APSC_DV.002470.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.002470.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002470.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002470.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002470.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="APSC_DV.002470.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="APSC_DV.002470.LHII" origId="HIBERNATE.LHII" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.002470.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Use hash functions with a salt" id="APSC_DV.002470.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="APSC_DV.002470.MLVP" origId="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Use the 'nextInt()' method to generate a random integer" id="APSC_DV.002470.NIVND" origId="OPT.NIVND" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.002470.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="APSC_DV.002470.PEO" origId="SECURITY.ESD.PEO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid storing sensitive data in plaintext in a cookie" id="APSC_DV.002470.PLC" origId="SECURITY.ESD.PLC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.002470.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002470.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002470.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Store sensitive data in mutable objects" id="APSC_DV.002470.SDM" origId="SECURITY.ESD.SDM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Prevent exposure of sensitive data" id="APSC_DV.002470.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid passing sensitive data to functions that write to log files" id="APSC_DV.002470.SENSLOG" origId="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Inspect instance fields of serializable objects to make sure they will not expose sensitive information" id="APSC_DV.002470.SIF" origId="SECURITY.ESD.SIF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Initialize KeyGenerator instances" id="APSC_DV.002470.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="APSC_DV.002470" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="APSC_DV.002470.SIO" origId="SECURITY.ESD.SIO" sev="2" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.002470.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Safely serialize sensitive data" id="APSC_DV.002470.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Protect against Jakarta Digester injection" id="APSC_DV.002470.TDDIG" origId="BD.SECURITY.TDDIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Protect against JXPath injection" id="APSC_DV.002470.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Protect against XPath injection" id="APSC_DV.002470.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.002470.UDC" origId="SECURITY.UEC.UDC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid improper casting of the results of the 'next' methods in the 'java.util.Random' class" id="APSC_DV.002470.UNI" origId="PB.API.UNI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.002470.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.002470.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002470.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002470.WCMWS" origId="SECURITY.UEC.WCMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002470.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002470.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002470.WMWS" origId="SECURITY.UEC.WMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002470" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002470.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid using custom MessageDigest implementations" id="APSC_DV.002480.ACMD" origId="SECURITY.WSC.ACMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid hard-coding the arguments to certain methods" id="APSC_DV.002480.AHCA" origId="SECURITY.WSC.AHCA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid using insecure cryptographic algorithms for data encryption with Spring" id="APSC_DV.002480.AISSAJAVA" origId="SECURITY.WSC.AISSAJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid using insecure cryptographic algorithms in Spring XML configurations" id="APSC_DV.002480.AISSAXML" origId="SECURITY.WSC.AISSAXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid using the javax.crypto.NullCipher class in non-test classes" id="APSC_DV.002480.AUNC" origId="SECURITY.WSC.AUNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Allow only certain providers to be specified for the 'Security.addProvider()' method" id="APSC_DV.002480.BP" origId="SECURITY.WSC.BP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid using cryptographic keys which are too short" id="APSC_DV.002480.CKTS" origId="SECURITY.WSC.CKTS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Do not log confidential or sensitive information" id="APSC_DV.002480.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Clear sensitive data after use" id="APSC_DV.002480.CSD" origId="SECURITY.ESD.CSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Ensure that the 'Encrypt' directive is specified for each 'items' tag in Axis2 configuration files" id="APSC_DV.002480.EDAR" origId="SECURITY.UEC.EDAR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Ensure arguments passed to certain methods come from predefined methods list" id="APSC_DV.002480.ENPP" origId="SECURITY.WSC.ENPP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid using hard-coded cryptographic keys" id="APSC_DV.002480.HCCK" origId="SECURITY.WSC.HCCK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002480.HGRSI" origId="SECURITY.WSC.HGRSI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002480.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid using insecure algorithms for cryptography" id="APSC_DV.002480.ICA" origId="SECURITY.WSC.ICA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid non-random &quot;byte[]&quot; when using IvParameterSpec" id="APSC_DV.002480.IVR" origId="SECURITY.WSC.IVR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="APSC_DV.002480.LHII" origId="HIBERNATE.LHII" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="MessageDigest objects must process the data with the 'update' method" id="APSC_DV.002480.MCMDU" origId="SECURITY.WSC.MCMDU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Use hash functions with a salt" id="APSC_DV.002480.MDSALT" origId="SECURITY.WSC.MDSALT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="APSC_DV.002480.MLVP" origId="STRUTS.MLVP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Use the 'nextInt()' method to generate a random integer" id="APSC_DV.002480.NIVND" origId="OPT.NIVND" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.002480.PCCF" origId="SECURITY.UEC.PCCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="APSC_DV.002480.PEO" origId="SECURITY.ESD.PEO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid storing sensitive data in plaintext in a cookie" id="APSC_DV.002480.PLC" origId="SECURITY.ESD.PLC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.002480.PTPT" origId="SECURITY.UEC.PTPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002480.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.002480.PWDXML" origId="SECURITY.UEC.PWDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Store sensitive data in mutable objects" id="APSC_DV.002480.SDM" origId="SECURITY.ESD.SDM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Prevent exposure of sensitive data" id="APSC_DV.002480.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid passing sensitive data to functions that write to log files" id="APSC_DV.002480.SENSLOG" origId="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Inspect instance fields of serializable objects to make sure they will not expose sensitive information" id="APSC_DV.002480.SIF" origId="SECURITY.ESD.SIF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Initialize KeyGenerator instances" id="APSC_DV.002480.SIKG" origId="SECURITY.WSC.SIKG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="APSC_DV.002480" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="APSC_DV.002480.SIO" origId="SECURITY.ESD.SIO" sev="2" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'" id="APSC_DV.002480.SRD" origId="SECURITY.WSC.SRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Safely serialize sensitive data" id="APSC_DV.002480.SSSD" origId="BD.SECURITY.SSSD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Protect against Jakarta Digester injection" id="APSC_DV.002480.TDDIG" origId="BD.SECURITY.TDDIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Protect against JXPath injection" id="APSC_DV.002480.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Protect against XPath injection" id="APSC_DV.002480.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Ensure that all constrained resources are protected with a '&lt;user-data-constraint>' element in 'web.xml' files" id="APSC_DV.002480.UDC" origId="SECURITY.UEC.UDC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid improper casting of the results of the 'next' methods in the 'java.util.Random' class" id="APSC_DV.002480.UNI" origId="PB.API.UNI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.002480.UPWD" origId="HIBERNATE.UPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.002480.UTAX" origId="SECURITY.UEC.UTAX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002480.WCMC" origId="SECURITY.UEC.WCMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002480.WCMWS" origId="SECURITY.UEC.WCMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.002480.WCPWD" origId="SECURITY.UEC.WCPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Ensure SOAP messages are encrypted in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002480.WMC" origId="SECURITY.UEC.WMC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Ensure WS-Security is enabled in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002480.WMWS" origId="SECURITY.UEC.WMWS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002480" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.002480.WPWD" origId="SECURITY.UEC.WPWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002490" desc="Encapsulate arguments of dangerous methods with a validation method" id="APSC_DV.002490.EACM" origId="BD.SECURITY.EACM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002490" desc="Mark cookies as HttpOnly" id="APSC_DV.002490.SCHTTP" origId="SECURITY.WSC.SCHTTP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002490" desc="Protect against XSS vulnerabilities" id="APSC_DV.002490.TDXSS" origId="BD.SECURITY.TDXSS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002500" desc="Do not disable CSRF protection" id="APSC_DV.002500.DCSRFJAVA" origId="SPRING.DCSRFJAVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002500" desc="Do not disable CSRF protection" id="APSC_DV.002500.DCSRFXML" origId="SPRING.DCSRFXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002500" desc="Ensure that methods annotated with @RequestMapping specify the HTTP request method they call" id="APSC_DV.002500.REQMAP" origId="SPRING.REQMAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002500" desc="Validate all dangerous data" id="APSC_DV.002500.VPPD" origId="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Prevent the scripting API from executing untrusted code" id="APSC_DV.002510.ASAPI" origId="SECURITY.WSC.ASAPI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Avoid using the DriverManagerDataSource class in production code" id="APSC_DV.002510.DMDS" origId="SECURITY.WSC.DMDS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Disable XML external entity injection" id="APSC_DV.002510.DXXE" origId="SECURITY.IBA.DXXE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against Command injection" id="APSC_DV.002510.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against Environment injection" id="APSC_DV.002510.TDENV" origId="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against File contents injection" id="APSC_DV.002510.TDFILES" origId="BD.SECURITY.TDFILES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against File names injection" id="APSC_DV.002510.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against JXPath injection" id="APSC_DV.002510.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against LDAP injection" id="APSC_DV.002510.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against Library injection" id="APSC_DV.002510.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against network resource injection" id="APSC_DV.002510.TDNET" origId="BD.SECURITY.TDNET" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against Reflection injection" id="APSC_DV.002510.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against SQL injection" id="APSC_DV.002510.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against XML data injection" id="APSC_DV.002510.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Protect against XPath injection" id="APSC_DV.002510.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002510" desc="Avoid XPath injection when evaluating XPath queries" id="APSC_DV.002510.XPIJ" origId="SECURITY.IBA.XPIJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Avoid unvalidated input in array indexes" id="APSC_DV.002520.ARRAY" origId="BD.SECURITY.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Prevent the scripting API from executing untrusted code" id="APSC_DV.002520.ASAPI" origId="SECURITY.WSC.ASAPI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Avoid parsing untrusted data with XMLDecoder" id="APSC_DV.002520.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Path should be standardized before validation" id="APSC_DV.002520.CANPATH" origId="BD.SECURITY.CANPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Canonicalize data before validation" id="APSC_DV.002520.CDBV" origId="SECURITY.IBA.CDBV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Always call 'super.validate()' from validation methods in 'ActionForm' classes" id="APSC_DV.002520.CSVFV" origId="SECURITY.IBA.CSVFV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Avoid DNS lookups for decision making" id="APSC_DV.002520.DNSL" origId="SECURITY.WSC.DNSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Disable XML external entity injection" id="APSC_DV.002520.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Encapsulate arguments of dangerous methods with a validation method" id="APSC_DV.002520.EACM" origId="BD.SECURITY.EACM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Encapsulate constructor arguments with a validation function" id="APSC_DV.002520.EDPM" origId="SECURITY.IBA.EDPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Ensure that file target paths retrieved by resolving symbolic links are safe" id="APSC_DV.002520.FOLLOW" origId="SECURITY.WSC.FOLLOW" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002520.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Validate shortcut target paths before use" id="APSC_DV.002520.LNK" origId="SECURITY.WSC.LNK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Avoid passing unvalidated binary data to log methods" id="APSC_DV.002520.LOG" origId="BD.SECURITY.LOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Avoid operating on tainted data in privileged blocks" id="APSC_DV.002520.PRIVIL" origId="BD.SECURITY.PRIVIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="APSC_DV.002520.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against Command injection" id="APSC_DV.002520.TDCMD" origId="BD.SECURITY.TDCMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Validate potentially tainted data before it is used in methods that generate code" id="APSC_DV.002520.TDCODE" origId="BD.SECURITY.TDCODE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against Jakarta Digester injection" id="APSC_DV.002520.TDDIG" origId="BD.SECURITY.TDDIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against Environment injection" id="APSC_DV.002520.TDENV" origId="BD.SECURITY.TDENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against File contents injection" id="APSC_DV.002520.TDFILES" origId="BD.SECURITY.TDFILES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against File names injection" id="APSC_DV.002520.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Exclude unsanitized user input from format strings" id="APSC_DV.002520.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against JXPath injection" id="APSC_DV.002520.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against LDAP injection" id="APSC_DV.002520.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against Library injection" id="APSC_DV.002520.TDLIB" origId="BD.SECURITY.TDLIB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against log forging" id="APSC_DV.002520.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against network resource injection" id="APSC_DV.002520.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against using unprotected credentials" id="APSC_DV.002520.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against HTTP response splitting" id="APSC_DV.002520.TDRESP" origId="BD.SECURITY.TDRESP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against Reflection injection" id="APSC_DV.002520.TDRFL" origId="BD.SECURITY.TDRFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Do not store untrusted data in HTTP session" id="APSC_DV.002520.TDSESSION" origId="BD.SECURITY.TDSESSION" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against SQL injection" id="APSC_DV.002520.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against XML data injection" id="APSC_DV.002520.TDXML" origId="BD.SECURITY.TDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Protect against XPath injection" id="APSC_DV.002520.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Validate objects before deserialization" id="APSC_DV.002520.VOBD" origId="SERIAL.VOBD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Validate all dangerous data" id="APSC_DV.002520.VPPD" origId="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Encapsulate all redirect and forward URLs with a validation function" id="APSC_DV.002520.VRD" origId="SECURITY.IBA.VRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Validate untrusted XML using schema or DTD before reading" id="APSC_DV.002520.XMLVAL" origId="BD.SECURITY.XMLVAL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002520" desc="Avoid XPath injection when evaluating XPath queries" id="APSC_DV.002520.XPIJ" origId="SECURITY.IBA.XPIJ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Avoid unvalidated input in array indexes" id="APSC_DV.002530.ARRAY" origId="BD.SECURITY.ARRAY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Prevent the scripting API from executing untrusted code" id="APSC_DV.002530.ASAPI" origId="SECURITY.WSC.ASAPI" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Avoid parsing untrusted data with XMLDecoder" id="APSC_DV.002530.AUXD" origId="SECURITY.IBA.AUXD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Path should be standardized before validation" id="APSC_DV.002530.CANPATH" origId="BD.SECURITY.CANPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Canonicalize data before validation" id="APSC_DV.002530.CDBV" origId="SECURITY.IBA.CDBV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Always call 'super.validate()' from validation methods in 'ActionForm' classes" id="APSC_DV.002530.CSVFV" origId="SECURITY.IBA.CSVFV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Avoid DNS lookups for decision making" id="APSC_DV.002530.DNSL" origId="SECURITY.WSC.DNSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Disable XML external entity injection" id="APSC_DV.002530.DXXE" origId="SECURITY.IBA.DXXE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Encapsulate arguments of dangerous methods with a validation method" id="APSC_DV.002530.EACM" origId="BD.SECURITY.EACM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Encapsulate constructor arguments with a validation function" id="APSC_DV.002530.EDPM" origId="SECURITY.IBA.EDPM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Ensure that file target paths retrieved by resolving symbolic links are safe" id="APSC_DV.002530.FOLLOW" origId="SECURITY.WSC.FOLLOW" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002530.HV" origId="SECURITY.WSC.HV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Validate shortcut target paths before use" id="APSC_DV.002530.LNK" origId="SECURITY.WSC.LNK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Avoid passing unvalidated binary data to log methods" id="APSC_DV.002530.LOG" origId="BD.SECURITY.LOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Avoid operating on tainted data in privileged blocks" id="APSC_DV.002530.PRIVIL" origId="BD.SECURITY.PRIVIL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="APSC_DV.002530.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Command injection" id="APSC_DV.002530.TDCMD" origId="BD.SECURITY.TDCMD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Validate potentially tainted data before it is used in methods that generate code" id="APSC_DV.002530.TDCODE" origId="BD.SECURITY.TDCODE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Jakarta Digester injection" id="APSC_DV.002530.TDDIG" origId="BD.SECURITY.TDDIG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Environment injection" id="APSC_DV.002530.TDENV" origId="BD.SECURITY.TDENV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against File contents injection" id="APSC_DV.002530.TDFILES" origId="BD.SECURITY.TDFILES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against File names injection" id="APSC_DV.002530.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Exclude unsanitized user input from format strings" id="APSC_DV.002530.TDINPUT" origId="BD.SECURITY.TDINPUT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against JXPath injection" id="APSC_DV.002530.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against LDAP injection" id="APSC_DV.002530.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Library injection" id="APSC_DV.002530.TDLIB" origId="BD.SECURITY.TDLIB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against log forging" id="APSC_DV.002530.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against network resource injection" id="APSC_DV.002530.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against using unprotected credentials" id="APSC_DV.002530.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against HTTP response splitting" id="APSC_DV.002530.TDRESP" origId="BD.SECURITY.TDRESP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against Reflection injection" id="APSC_DV.002530.TDRFL" origId="BD.SECURITY.TDRFL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Do not store untrusted data in HTTP session" id="APSC_DV.002530.TDSESSION" origId="BD.SECURITY.TDSESSION" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against SQL injection" id="APSC_DV.002530.TDSQL" origId="BD.SECURITY.TDSQL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against XML data injection" id="APSC_DV.002530.TDXML" origId="BD.SECURITY.TDXML" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Protect against XPath injection" id="APSC_DV.002530.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Validate objects before deserialization" id="APSC_DV.002530.VOBD" origId="SERIAL.VOBD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Validate all dangerous data" id="APSC_DV.002530.VPPD" origId="BD.SECURITY.VPPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Encapsulate all redirect and forward URLs with a validation function" id="APSC_DV.002530.VRD" origId="SECURITY.IBA.VRD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Validate untrusted XML using schema or DTD before reading" id="APSC_DV.002530.XMLVAL" origId="BD.SECURITY.XMLVAL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002530" desc="Avoid XPath injection when evaluating XPath queries" id="APSC_DV.002530.XPIJ" origId="SECURITY.IBA.XPIJ" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002540" desc="Protect against SQL injection" id="APSC_DV.002540.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Avoid constructor injection" id="APSC_DV.002550.ACARG" origId="SPRING.ACARG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Process XML and HTML with a library instead of raw text" id="APSC_DV.002550.ARXML" origId="SECURITY.WSC.ARXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Avoid parsing untrusted data with XMLDecoder" id="APSC_DV.002550.AUXD" origId="SECURITY.IBA.AUXD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Disable XML external entity injection" id="APSC_DV.002550.DXXE" origId="SECURITY.IBA.DXXE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Ensure that Secure Processing is used" id="APSC_DV.002550.FXMLP" origId="SECURITY.WSC.FXMLP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Use library methods for string replacements of special characters in HTML and XML" id="APSC_DV.002550.STREP" origId="SECURITY.WSC.STREP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Protect against JXPath injection" id="APSC_DV.002550.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Protect against XML data injection" id="APSC_DV.002550.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Protect against XPath injection" id="APSC_DV.002550.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Ensure that XML files are well-formatted" id="APSC_DV.002550.WF" origId="XML.WF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002550" desc="Validate untrusted XML using schema or DTD before reading" id="APSC_DV.002550.XMLVAL" origId="BD.SECURITY.XMLVAL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Avoid unvalidated input in array indexes" id="APSC_DV.002560.ARRAY" origId="BD.SECURITY.ARRAY" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Prevent the scripting API from executing untrusted code" id="APSC_DV.002560.ASAPI" origId="SECURITY.WSC.ASAPI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Avoid parsing untrusted data with XMLDecoder" id="APSC_DV.002560.AUXD" origId="SECURITY.IBA.AUXD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Path should be standardized before validation" id="APSC_DV.002560.CANPATH" origId="BD.SECURITY.CANPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Canonicalize data before validation" id="APSC_DV.002560.CDBV" origId="SECURITY.IBA.CDBV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Always call 'super.validate()' from validation methods in 'ActionForm' classes" id="APSC_DV.002560.CSVFV" origId="SECURITY.IBA.CSVFV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Avoid using the DriverManagerDataSource class in production code" id="APSC_DV.002560.DMDS" origId="SECURITY.WSC.DMDS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Avoid DNS lookups for decision making" id="APSC_DV.002560.DNSL" origId="SECURITY.WSC.DNSL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Disable XML external entity injection" id="APSC_DV.002560.DXXE" origId="SECURITY.IBA.DXXE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Encapsulate arguments of dangerous methods with a validation method" id="APSC_DV.002560.EACM" origId="BD.SECURITY.EACM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Encapsulate constructor arguments with a validation function" id="APSC_DV.002560.EDPM" origId="SECURITY.IBA.EDPM" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Ensure arguments passed to certain methods come from predefined methods list" id="APSC_DV.002560.ENPP" origId="SECURITY.WSC.ENPP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Ensure that file target paths retrieved by resolving symbolic links are safe" id="APSC_DV.002560.FOLLOW" origId="SECURITY.WSC.FOLLOW" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class" id="APSC_DV.002560.HGRSI" origId="SECURITY.WSC.HGRSI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Ensure the HostnameVerifier.verify() method validates the certificate" id="APSC_DV.002560.HV" origId="SECURITY.WSC.HV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Always call 'HttpSession.invalidate()' before 'LoginContext.login()'" id="APSC_DV.002560.ISL" origId="SECURITY.WSC.ISL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Validate shortcut target paths before use" id="APSC_DV.002560.LNK" origId="SECURITY.WSC.LNK" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Avoid passing unvalidated binary data to log methods" id="APSC_DV.002560.LOG" origId="BD.SECURITY.LOG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Avoid operating on tainted data in privileged blocks" id="APSC_DV.002560.PRIVIL" origId="BD.SECURITY.PRIVIL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Disable LDAP deserialization" id="APSC_DV.002560.SC" origId="SECURITY.IBA.SC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Validate potentially tainted data before it is used to determine the size of memory allocation" id="APSC_DV.002560.TDALLOC" origId="BD.SECURITY.TDALLOC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Command injection" id="APSC_DV.002560.TDCMD" origId="BD.SECURITY.TDCMD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Validate potentially tainted data before it is used in methods that generate code" id="APSC_DV.002560.TDCODE" origId="BD.SECURITY.TDCODE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Jakarta Digester injection" id="APSC_DV.002560.TDDIG" origId="BD.SECURITY.TDDIG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Environment injection" id="APSC_DV.002560.TDENV" origId="BD.SECURITY.TDENV" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against File contents injection" id="APSC_DV.002560.TDFILES" origId="BD.SECURITY.TDFILES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against File names injection" id="APSC_DV.002560.TDFNAMES" origId="BD.SECURITY.TDFNAMES" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against JXPath injection" id="APSC_DV.002560.TDJXPATH" origId="BD.SECURITY.TDJXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against LDAP injection" id="APSC_DV.002560.TDLDAP" origId="BD.SECURITY.TDLDAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Library injection" id="APSC_DV.002560.TDLIB" origId="BD.SECURITY.TDLIB" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against log forging" id="APSC_DV.002560.TDLOG" origId="BD.SECURITY.TDLOG" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against network resource injection" id="APSC_DV.002560.TDNET" origId="BD.SECURITY.TDNET" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against using unprotected credentials" id="APSC_DV.002560.TDPASSWD" origId="BD.SECURITY.TDPASSWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against HTTP response splitting" id="APSC_DV.002560.TDRESP" origId="BD.SECURITY.TDRESP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against Reflection injection" id="APSC_DV.002560.TDRFL" origId="BD.SECURITY.TDRFL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Do not store untrusted data in HTTP session" id="APSC_DV.002560.TDSESSION" origId="BD.SECURITY.TDSESSION" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against SQL injection" id="APSC_DV.002560.TDSQL" origId="BD.SECURITY.TDSQL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against XML data injection" id="APSC_DV.002560.TDXML" origId="BD.SECURITY.TDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Protect against XPath injection" id="APSC_DV.002560.TDXPATH" origId="BD.SECURITY.TDXPATH" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Validate objects before deserialization" id="APSC_DV.002560.VOBD" origId="SERIAL.VOBD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Validate all dangerous data" id="APSC_DV.002560.VPPD" origId="BD.SECURITY.VPPD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Encapsulate all redirect and forward URLs with a validation function" id="APSC_DV.002560.VRD" origId="SECURITY.IBA.VRD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Properly validate server identity" id="APSC_DV.002560.VSI" origId="SECURITY.WSC.VSI" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Validate untrusted XML using schema or DTD before reading" id="APSC_DV.002560.XMLVAL" origId="BD.SECURITY.XMLVAL" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002560" desc="Avoid XPath injection when evaluating XPath queries" id="APSC_DV.002560.XPIJ" origId="SECURITY.IBA.XPIJ" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="APSC_DV.002570.ACPST" origId="SECURITY.WSC.ACPST" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Do not log confidential or sensitive information" id="APSC_DV.002570.CONSEN" origId="SECURITY.ESD.CONSEN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Avoid untrusted input when logging messages with Seam Logging API" id="APSC_DV.002570.DCEMSL" origId="SECURITY.UEHL.DCEMSL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Encapsulate arguments of dangerous methods with a validation method" id="APSC_DV.002570.EACM" origId="BD.SECURITY.EACM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Avoid debug information from Spring Security framework to logs" id="APSC_DV.002570.EWSSEC" origId="SECURITY.WSC.EWSSEC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Avoid logging sensitive Hibernate-related information at the 'info' level in 'log4j.properties' files" id="APSC_DV.002570.LHII" origId="HIBERNATE.LHII" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Avoid passing unvalidated binary data to log methods" id="APSC_DV.002570.LOG" origId="BD.SECURITY.LOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="APSC_DV.002570.PEO" origId="SECURITY.ESD.PEO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Prevent exposure of sensitive data" id="APSC_DV.002570.SENS" origId="BD.SECURITY.SENS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Avoid passing sensitive data to functions that write to log files" id="APSC_DV.002570.SENSLOG" origId="BD.SECURITY.SENSLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="APSC_DV.002570" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="APSC_DV.002570.SIO" origId="SECURITY.ESD.SIO" sev="2" total="1"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Protect against log forging" id="APSC_DV.002570.TDLOG" origId="BD.SECURITY.TDLOG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002570" desc="Protect against network resource injection" id="APSC_DV.002570.TDNET" origId="BD.SECURITY.TDNET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002590" desc="Avoid using compound assignment operators in cases which may cause overflow" id="APSC_DV.002590.CACO" origId="PB.NUM.CACO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002590" desc="Do not cast primitive data types to lower precision" id="APSC_DV.002590.CLP" origId="PB.NUM.CLP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002590" desc="Possible integer overflow in a compare or compareTo method" id="APSC_DV.002590.CMP" origId="PB.NUM.CMP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002590" desc="Avoid calculations which result in overflow or NaN" id="APSC_DV.002590.ICO" origId="PB.NUM.ICO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.002590" desc="Avoid wraparounds when performing arithmetic integer operations" id="APSC_DV.002590.INTWRAP" origId="BD.PB.INTWRAP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.002590" desc="Use unsigned right shift instead of division when overflow is possible" id="APSC_DV.002590.IOF" origId="PB.NUM.IOF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Avoid hard-coding the arguments to certain methods" id="APSC_DV.003110.AHCA" origId="SECURITY.WSC.AHCA" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="APSC_DV.003110.HCCS" origId="SECURITY.WSC.HCCS" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Avoid storing usernames and passwords in plain text in Castor 'jdo-conf.xml' files" id="APSC_DV.003110.PCCF" origId="SECURITY.UEC.PCCF" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Password information should not be included in properties file in plaintext" id="APSC_DV.003110.PLAIN" origId="PROPS.PLAIN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Avoid storing sensitive data in plaintext in a cookie" id="APSC_DV.003110.PLC" origId="SECURITY.ESD.PLC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Avoid using plain text passwords in Axis 'wsdd' files" id="APSC_DV.003110.PTPT" origId="SECURITY.UEC.PTPT" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.003110.PWDPROP" origId="SECURITY.UEC.PWDPROP" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Ensure that passwords are not stored as plaintext and are sufficiently long" id="APSC_DV.003110.PWDXML" origId="SECURITY.UEC.PWDXML" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="APSC_DV.003110.UPWD" origId="HIBERNATE.UPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Avoid using plain text passwords in Axis2 configuration files" id="APSC_DV.003110.UTAX" origId="SECURITY.UEC.UTAX" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservicesclient-ext.xmi' files" id="APSC_DV.003110.WCPWD" origId="SECURITY.UEC.WCPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="APSC_DV.003110" desc="Avoid unencrypted passwords in WebSphere 'ibm-webservices-ext.xmi' files" id="APSC_DV.003110.WPWD" origId="SECURITY.UEC.WPWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Use '()' to separate complex expressions" id="APSC_DV.003215.APAREN" origId="FORMAT.APAREN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Ensure proper spacing in array references" id="APSC_DV.003215.ASPACE" origId="FORMAT.ASPACE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Do not place empty whitespace at the end of a line" id="APSC_DV.003215.ATS" origId="FORMAT.ATS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Put a blank line before each C-style comment" id="APSC_DV.003215.BLBC" origId="FORMAT.BLBC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="5;" authUrg="5;" cat="APSC_DV.003215" desc="Enforce number of blank line(s) before type declarations" id="APSC_DV.003215.BLCD" origId="FORMAT.BLCD" sev="3" total="5"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of blank line(s) to separate &quot;imports&quot; from different packages" id="APSC_DV.003215.BLSIM" origId="FORMAT.BLSIM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Place a closing brace on its own line" id="APSC_DV.003215.CBRACE" origId="FORMAT.CBRACE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Place a single space character or no space character after type casting" id="APSC_DV.003215.CMS" origId="FORMAT.CMS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Do not leave spaces between qualified names and method invocations" id="APSC_DV.003215.DOT" origId="FORMAT.DOT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Use spaces instead of tabs (or tabs instead of spaces)" id="APSC_DV.003215.DUT" origId="FORMAT.DUT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce the position of '{' brace" id="APSC_DV.003215.FCB" origId="FORMAT.FCB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Place the type that has the same name as the file as the first type" id="APSC_DV.003215.FCN" origId="FORMAT.FCN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Declare arrays with '[]' brackets after the array type and before the variable name(s)" id="APSC_DV.003215.IAD" origId="FORMAT.IAD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space(s) for indentation" id="APSC_DV.003215.IND" origId="FORMAT.IND" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Limit the maximum length of a line" id="APSC_DV.003215.LL" origId="FORMAT.LL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="3;" cat="APSC_DV.003215" desc="Include a meaningful file header comment in every source file" id="APSC_DV.003215.MCH" origId="FORMAT.MCH" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce the order of annotations and modifiers" id="APSC_DV.003215.MO" origId="FORMAT.MO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Place a single space character or no space character between a method name and the opening &quot;(&quot; parenthesis" id="APSC_DV.003215.MSP" origId="FORMAT.MSP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Do not place statements on the same line as the '{' opening brace" id="APSC_DV.003215.NSAB" origId="FORMAT.NSAB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Write one statement per line" id="APSC_DV.003215.OSPL" origId="FORMAT.OSPL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) after every comma" id="APSC_DV.003215.SAC" origId="FORMAT.SAC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) on each side of an assignment operator" id="APSC_DV.003215.SAOP" origId="FORMAT.SAOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) after the opening parenthesis &quot;(&quot; of a conditional statement" id="APSC_DV.003215.SAP" origId="FORMAT.SAP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) after every semicolon" id="APSC_DV.003215.SAS" origId="FORMAT.SAS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) between a prefixed unary operator and its operand" id="APSC_DV.003215.SAUOP" origId="FORMAT.SAUOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) on each side of a bitwise operator" id="APSC_DV.003215.SBOP" origId="FORMAT.SBOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) between a postfixed unary operator and its operand" id="APSC_DV.003215.SBUOP" origId="FORMAT.SBUOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) between a conditional statement and the opening &quot;(&quot; parenthesis" id="APSC_DV.003215.SC" origId="FORMAT.SC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) before and after the &quot;?&quot; conditional operator" id="APSC_DV.003215.SCOP" origId="FORMAT.SCOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) on each side of a logical operator" id="APSC_DV.003215.SLOP" origId="FORMAT.SLOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Enforce number of space character(s) on each side of a relational operator" id="APSC_DV.003215.SROP" origId="FORMAT.SROP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Avoid using trailing comments" id="APSC_DV.003215.TC" origId="FORMAT.TC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Avoid or enforce the use of trailing commas in array initializers" id="APSC_DV.003215.TCOMMA" origId="FORMAT.TCOMMA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Use the preferred formatting for conditional expressions" id="APSC_DV.003215.TE" origId="FORMAT.TE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Make sure all files are terminated with a newline character" id="APSC_DV.003215.TNL" origId="FORMAT.TNL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="6;" authUrg="6;" cat="APSC_DV.003215" desc="Enforce number of blank line(s) between major sections" id="APSC_DV.003215.U2BL" origId="FORMAT.U2BL" sev="3" total="6"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003215" desc="Avoid unnecessary parentheses" id="APSC_DV.003215.UP" origId="FORMAT.UP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="APSC_DV.003235.AECB" origId="PB.TYPO.AECB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not abuse exceptions as flow control statements" id="APSC_DV.003235.AEFC" origId="EXCEPT.AEFC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not use instanceof in a catch block to check the exception type" id="APSC_DV.003235.AIOC" origId="EXCEPT.AIOC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="APSC_DV.003235.ARCF" origId="PB.CUB.ARCF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Avoid redundant throw clauses" id="APSC_DV.003235.ARTD" origId="UC.ARTD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not exit &quot;finally&quot; blocks abruptly" id="APSC_DV.003235.ATSF" origId="PB.CUB.ATSF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Avoid unused &quot;throws&quot; clauses" id="APSC_DV.003235.AUT" origId="GLOBAL.AUT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Catch all &quot;Throwable&quot; objects which may be thrown in the body of certain methods" id="APSC_DV.003235.CATO" origId="EXCEPT.CATO" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Avoid catch clauses with the same content" id="APSC_DV.003235.CDUPL" origId="EXCEPT.CDUPL" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Declare 'clone() throws CloneNotSupportedException' for Cloneable class" id="APSC_DV.003235.CLONE" origId="CODSTA.OIM.CLONE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Ensure 'clone()' method of non-final Cloneable class declared to throw 'CloneNotSupportedException'" id="APSC_DV.003235.CLONET" origId="CODSTA.OIM.CLONET" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Check the return value of methods which read or skip input" id="APSC_DV.003235.CRRV" origId="PB.LOGIC.CRRV" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Always chain thrown exceptions" id="APSC_DV.003235.CTE" origId="EXCEPT.CTE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Ensure 'Iterator.next()' method implementations throw 'NoSuchElementException'" id="APSC_DV.003235.CTNSE" origId="PB.RE.CTNSE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not throw exceptions from constructors of &quot;public&quot; non-&quot;final&quot; classes" id="APSC_DV.003235.EPNFC" origId="EXCEPT.EPNFC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Always catch exceptions" id="APSC_DV.003235.EXCEPT" origId="BD.PB.EXCEPT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not hide 'catch' blocks" id="APSC_DV.003235.HCB" origId="EXCEPT.HCB" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Minimize &quot;try&quot; block size" id="APSC_DV.003235.MTBS" origId="CODSTA.READ.MTBS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not declare any thrown exceptions in the 'main()' method" id="APSC_DV.003235.MTE" origId="EXCEPT.MTE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not catch exception types which are too general or are unchecked exceptions" id="APSC_DV.003235.NCE" origId="CODSTA.EPC.NCE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not catch the 'java.lang.Error' object" id="APSC_DV.003235.NCERR" origId="EXCEPT.NCERR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not catch 'NullPointerException'" id="APSC_DV.003235.NCNPE" origId="EXCEPT.NCNPE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not define direct or indirect subclasses of 'Error' and 'Throwable'" id="APSC_DV.003235.NDC" origId="PB.API.NDC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Ensure that the 'parse' methods of the numeric classes do not throw unhandled &quot;NumberFormatExceptions&quot;" id="APSC_DV.003235.NFE" origId="EXCEPT.NFE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Avoid NullPointerException" id="APSC_DV.003235.NP" origId="BD.EXCEPT.NP" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not throw exception types which are too general or are unchecked exceptions" id="APSC_DV.003235.NTERR" origId="EXCEPT.NTERR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not throw 'NullPointerException'" id="APSC_DV.003235.NTNPE" origId="EXCEPT.NTNPE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Avoid declaring methods to throw general or unchecked Exception types" id="APSC_DV.003235.NTX" origId="CODSTA.BP.NTX" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Catch 'OutOfMemoryError' for large array allocations" id="APSC_DV.003235.OOME" origId="MOBILE.J2ME.OOME" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Avoid dereferencing null objects" id="APSC_DV.003235.PNPD" origId="PB.RE.PNPD" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not catch exceptions only to rethrow them" id="APSC_DV.003235.RTE" origId="PB.USC.RTE" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Rethrow certain exceptions if they are caught" id="APSC_DV.003235.RTERR" origId="EXCEPT.RTERR" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Do not throw exceptions from the constructors of exception classes" id="APSC_DV.003235.TEFEC" origId="EXCEPT.TEFEC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Avoid Time-of-check Time-of-use (TOCTOU) Race Condition" id="APSC_DV.003235.TOCTOU" origId="PB.CUB.TOCTOU" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Place &quot;try/catch/finally&quot; blocks outside of loops" id="APSC_DV.003235.TRY" origId="EXCEPT.TRY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="APSC_DV.003235" desc="Use a caught exception in the &quot;catch&quot; block" id="APSC_DV.003235.UCATCH" origId="UC.UCATCH" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid returning &quot;null&quot; for arrays and certain types" id="CODSTA.BP.ARN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid passing non-reifiable types to varargs methods" id="CODSTA.BP.NRVA" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid label statements" id="CODSTA.BP.AULS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid using multiple loggers, use logging levels instead" id="CODSTA.BP.AUML" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Provide a '{}' block for conditional statements" id="CODSTA.BP.BLK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid unnecessary nested blocks" id="CODSTA.BP.BLOCK" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Declare fields with uppercase character names as &quot;final&quot;" id="CODSTA.BP.CFNF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="CODSTA.BP" desc="Avoid 'public' or 'protected' constructors for immutable classes" id="CODSTA.BP.CMUTA" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Place constants on the appropriate side of comparisons" id="CODSTA.BP.CS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Declare loggers as &quot;static final&quot; fields" id="CODSTA.BP.DLSF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Do not call methods which terminates Java Virtual Machine" id="CODSTA.BP.EXIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="6;" authUrg="6;" cat="CODSTA.BP" desc="Declare all formal parameters as &quot;final&quot;" id="CODSTA.BP.FPF" sev="3" total="6"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid using 'Hashtable' and 'Vector'" id="CODSTA.BP.HTV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid or enforce usage of '*' form of import statements" id="CODSTA.BP.IMPTD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid declaring methods to throw general or unchecked Exception types" id="CODSTA.BP.NTX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Ensure that a class which has only &quot;private&quot; constructors is declared as &quot;final&quot;" id="CODSTA.BP.PCF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid &quot;break&quot; and/or &quot;continue&quot; with labels" id="CODSTA.BP.ABCL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid declaring methods that return 'Object'" id="CODSTA.BP.AMRO" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid using reflection methods" id="CODSTA.BP.ARM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Avoid using wildcards in method return types" id="CODSTA.BP.AWRT" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Reference interface constants with their declaring interface names" id="CODSTA.BP.FQNIC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Do not use &quot;break&quot; and/or &quot;continue&quot; statements" id="CODSTA.BP.CONTINUE" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Ensure overloaded constructors and methods share the same accessibility" id="CODSTA.BP.OCMA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.BP" desc="Do not define &quot;public&quot; or &quot;protected&quot; members in anonymous classes" id="CODSTA.BP.PPAC" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Call 'super.clone()' in all 'clone()' methods" id="CODSTA.EPC.SCLONE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not use constructors in the 'clone()' method" id="CODSTA.EPC.CLNC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not call methods that might cause unexpected NullPointerExceptions during constructor execution" id="CODSTA.EPC.NCNFC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Avoid conversions from parameterized types to raw types" id="CODSTA.EPC.AGBPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Avoid using the conditional operator with mismatched numeric types" id="CODSTA.EPC.COMT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not perform bitwise and arithmetic operations on the same data" id="CODSTA.EPC.NCBAV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not catch exception types which are too general or are unchecked exceptions" id="CODSTA.EPC.NCE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Avoid using the same generic type variable for multiple method arguments" id="CODSTA.EPC.STA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Use 'StringTokenizer' instead of 'indexOf()' and 'substring()' for String parsing" id="CODSTA.EPC.UST" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not call an &quot;abstract&quot; method from a constructor in an &quot;abstract&quot; class" id="CODSTA.EPC.NCAC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Use overloading judiciously" id="CODSTA.EPC.OVERLOAD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not make assignments to method parameters" id="CODSTA.EPC.AFP" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Use &quot;int&quot; instead of &quot;byte&quot; or &quot;short&quot; and &quot;double&quot; instead of &quot;float&quot; for variable declarations" id="CODSTA.EPC.IBS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not use too many non-&quot;final&quot; &quot;static&quot; fields" id="CODSTA.EPC.MSF" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not write to static fields from non-static methods" id="CODSTA.EPC.WSIM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Override 'Object.hashCode()' when you override 'Object.equals()' and vice versa" id="CODSTA.OIM.OVERRIDE" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Do not override non &quot;abstract&quot; methods of a parent class with &quot;abstract&quot; methods" id="CODSTA.OIM.AMMO" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Declare 'clone() throws CloneNotSupportedException' for Cloneable class" id="CODSTA.OIM.CLONE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Use the 'clone()' method only to implement 'Cloneable' interface" id="CODSTA.OIM.CLONE2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Ensure 'clone()' method of non-final Cloneable class declared to throw 'CloneNotSupportedException'" id="CODSTA.OIM.CLONET" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Define a &quot;static&quot; 'valueOf()' method for &quot;enum&quot; types which override 'toString()'" id="CODSTA.OIM.DVOM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Do not override 'toString()' in enum types" id="CODSTA.OIM.OVOTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Override 'toString()'" id="CODSTA.OIM.OTOSM" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Do not use assertions in production code" id="CODSTA.ORG.ASSERT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Do not make method calls to internal classes from non-internal classes" id="CODSTA.ORG.DINT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="2;" cat="CODSTA.ORG" desc="Order class elements appropriately" id="CODSTA.ORG.FO" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Avoid importing specific classes or packages" id="CODSTA.ORG.IMP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Organize methods by name" id="CODSTA.ORG.OGM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Order compilation unit elements appropriately" id="CODSTA.ORG.ORCU" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="CODSTA.ORG" desc="Ensure all types have a non default package name" id="CODSTA.ORG.UNDPN" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Do not have more than one type in each file" id="CODSTA.ORG.AMOC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Define constants in an &quot;interface&quot;" id="CODSTA.ORG.DCI" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Ensure that comments do not contain task tags" id="CODSTA.ORG.TODOJAVA" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Ensure that comments do not contain task tags" id="CODSTA.ORG.TODOPROP" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Ensure that comments do not contain task tags" id="CODSTA.ORG.TODOXML" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Place 'finalize()' methods between &quot;public&quot; and &quot;protected&quot; methods" id="CODSTA.ORG.ORFIM" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Present &quot;import&quot; statements in alphabetical order" id="CODSTA.ORG.ORIMP" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.ORG" desc="Place the 'main()' method last" id="CODSTA.ORG.PML" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Avoid constant interface anti-pattern" id="CODSTA.POD.ACIAP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Avoid &quot;static&quot; methods when the declaring class is a parameter type" id="CODSTA.POD.ASM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Use less specific types to accomplish loose coupling" id="CODSTA.POD.AUVT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Use chain constructors in classes with multiple constructors" id="CODSTA.POD.CHAIN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Avoid chains of &quot;instanceof&quot; comparisons" id="CODSTA.POD.CIOC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Do not access static members indirectly" id="CODSTA.POD.IASM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Avoid &quot;switch&quot; statements with too many or too few &quot;case&quot; statements" id="CODSTA.POD.SMC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Use &quot;enum&quot; types instead of a series of &quot;static final&quot; constants" id="CODSTA.POD.UET" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Enforce or avoid the use of parameterized types" id="CODSTA.POD.UPT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.POD" desc="Do not define constants in interfaces" id="CODSTA.POD.ISACF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="3;" authUrg="3;" cat="CODSTA.POD" desc="Define a no argument constructor whenever possible" id="CODSTA.POD.DCTOR" sev="5" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid literal constants" id="CODSTA.READ.USN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not use complicated conditional expressions in control structures" id="CODSTA.READ.ACCS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Access and set fields directly in the declaring type instead of using getter and setter methods" id="CODSTA.READ.AFD" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid anonymous inner classes" id="CODSTA.READ.AIC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid static import statements" id="CODSTA.READ.ASIS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid unnecessary calls to 'toString()'" id="CODSTA.READ.AUTS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Comment the ends of control structures" id="CODSTA.READ.CCB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Comment empty blocks" id="CODSTA.READ.CEB" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid using increment or decrement operators in nested expressions" id="CODSTA.READ.CID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Enforce or avoid usage of conditional operators" id="CODSTA.READ.CX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Explicitly call one of the superclass' constructors from all constructors" id="CODSTA.READ.ECSC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="CODSTA.READ" desc="Declare &quot;private&quot; constant fields &quot;final&quot;" id="CODSTA.READ.FF" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="CODSTA.READ" desc="Declare constant local variables &quot;final&quot;" id="CODSTA.READ.FLV" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid using Hexadecimal binary exponents" id="CODSTA.READ.HBE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid having a lower-case &quot;l&quot; or the number &quot;1&quot; at the end of a &quot;long&quot; integer constant" id="CODSTA.READ.LONG" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not declare multiple variables in one statement" id="CODSTA.READ.MVOS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid nested assignments or assignments embedded in other expressions" id="CODSTA.READ.NEA" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid non-static initializers" id="CODSTA.READ.NSI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Declare &quot;for&quot; loops with an initializer, conditional, and updater statements" id="CODSTA.READ.PCIF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not declare &quot;public&quot; constructors in non-public classes" id="CODSTA.READ.PCTOR" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Use 'isEmpty()' for Collections and Maps instead of comparing 'size()' to 0" id="CODSTA.READ.SIE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" id="CODSTA.READ.UATS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Use underscore characters (_) in numerical literal" id="CODSTA.READ.ULIT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not declare multiple variables of different types in one statement" id="CODSTA.READ.VDT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Limit the number of initialization and update statements in &quot;for&quot; loops" id="CODSTA.READ.VIFS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not rely on automatic boxing and unboxing of primitive types" id="CODSTA.READ.ABUB" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not use fully qualified type names" id="CODSTA.READ.AFQN" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid using negative logic in if-else statement" id="CODSTA.READ.ANL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not use too many negation operators '!' in a single method" id="CODSTA.READ.DUN" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Declare variables as close as possible to where they are used" id="CODSTA.READ.DVCU" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Minimize &quot;try&quot; block size" id="CODSTA.READ.MTBS" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Declare never-modified collections as &quot;unmodifiable&quot; for clarity" id="CODSTA.READ.NMUC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Put declarations only at the beginning of blocks" id="CODSTA.READ.PDBB" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid create integer values from binary notation using Integer.parseInt() methods" id="CODSTA.READ.UBL" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid or enforce usage of enhanced &quot;for&quot; loops" id="CODSTA.READ.AEFS" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="CODSTA.READ" desc="Comment local variables" id="CODSTA.READ.CLV" sev="5" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Always call 'Collection.toArray()' with an empty constant array argument" id="CODSTA.READ.CTA" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Avoid using &quot;do-while&quot; statements" id="CODSTA.READ.DOWHILE" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Enforce use of &quot;for&quot; or &quot;while&quot; loops" id="CODSTA.READ.PFL" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="ECLIPSE" desc="Ensure &quot;Export-Package&quot; and &quot;Provide-Package&quot; match in MANIFEST.MF for Eclipse 3.0 compatibility" id="ECLIPSE.PCMF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="ECLIPSE" desc="Avoid exporting &quot;internal&quot; packages in MANIFEST.MF" id="ECLIPSE.IPMF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="ECLIPSE" desc="Avoid missing &quot;Eclipse-AutoStart&quot; entry in MANIFEST.MF" id="ECLIPSE.SMF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid unused &quot;throws&quot; clauses" id="GLOBAL.AUT" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare package-private fields as inaccessible as possible" id="GLOBAL.DPAF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare package-private methods as inaccessible as possible" id="GLOBAL.DPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare a package-private &quot;class&quot; &quot;final&quot; if it is not subclassed" id="GLOBAL.SPAC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare a package-private method &quot;final&quot; if it is not overridden" id="GLOBAL.SPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Ensure correct constructor declarations in utility classes" id="GLOBAL.UCC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused package-private types" id="GLOBAL.UPAC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused package-private fields" id="GLOBAL.UPAF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused package-private methods" id="GLOBAL.UPAM" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Make methods &quot;static&quot; if they do not use instance class members" id="GLOBAL.ASI" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare non-private fields &quot;final&quot; if they are read-only" id="GLOBAL.SF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Ensure that files do not contain cyclical dependencies" id="GLOBAL.ACD" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare &quot;package-private&quot; types as inaccessible as possible" id="GLOBAL.DPAC" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="2;" cat="GLOBAL" desc="Declare &quot;public/protected&quot; types as inaccessible as possible" id="GLOBAL.DPPC" sev="4" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Declare &quot;public/protected&quot; fields as inaccessible as possible" id="GLOBAL.DPPF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="2;" cat="GLOBAL" desc="Declare &quot;public/protected&quot; methods as inaccessible as possible" id="GLOBAL.DPPM" sev="4" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid interfaces which are never implemented and &quot;abstract&quot; classes which are never extended" id="GLOBAL.NIE" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;" authUrg="2;" cat="GLOBAL" desc="Avoid globally unused enum constants" id="GLOBAL.UEC" sev="4" total="2"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="3;" cat="GLOBAL" desc="Avoid globally unused &quot;public/protected&quot; types" id="GLOBAL.UPPC" sev="4" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GLOBAL" desc="Avoid globally unused &quot;public/protected&quot; fields" id="GLOBAL.UPPF" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;" authUrg="3;" cat="GLOBAL" desc="Avoid globally unused &quot;public/protected&quot; methods" id="GLOBAL.UPPM" sev="4" total="3"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="1;" cat="GLOBAL" desc="Declare a &quot;public/protected&quot; &quot;class&quot; &quot;final&quot; if it is not subclassed" id="GLOBAL.SPPC" sev="5" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;" authUrg="0;" cat="GLOBAL" desc="Declare a &quot;public/protected&quot; method &quot;final&quot; if it is not overridden" id="GLOBAL.SPPM" sev="5" total="1"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid duplicated property names" id="PROPS.DUPN" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid empty property names" id="PROPS.EMN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid hard-coded line separators in property values" id="PROPS.HCLS" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid misusing arguments in property values" id="PROPS.IARG" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid incomplete property entries" id="PROPS.ICK" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid unmatched property entries in resources with different locales" id="PROPS.MENTRY" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Password information should not be included in properties file in plaintext" id="PROPS.PLAIN" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid adding extra white spaces to the end of property values" id="PROPS.BSPV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid duplicated property values" id="PROPS.DUPV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid empty property values" id="PROPS.EMV" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Always use the '=' operator" id="PROPS.EQOP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Follow the limit for number of property entries" id="PROPS.FM" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid misusing the line continuation character '\'" id="PROPS.IVCC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid splitting property names into multiple lines" id="PROPS.MLN" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Use a naming convention for property names" id="PROPS.NAME" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid misspelling words in comments and property values" id="PROPS.SPELL" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Ensure that property entries are localized correctly" id="PROPS.TENTRY" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid classes that implement 'Externalizable' but do not define a no-argument constructor" id="SERIAL.ENNAC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure the return type of 'readResolve()' and 'writeReplace()' methods are 'java.lang.Object'" id="SERIAL.MRWD" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure outer class is serializable if its inner class is serializable" id="SERIAL.OC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure that the 'readObject()' and 'writeObject()' methods have the correct signature" id="SERIAL.ROWO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid serializable classes that extend a superclass without a zero-argument constructor" id="SERIAL.SNNAC" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Do not store non-serializable objects as HttpSession attributes" id="SERIAL.SNSO" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure Serializable classes are correct" id="SERIAL.NSFSC" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Declare 'serialPersistentFields' &quot;private static final&quot;" id="SERIAL.SPF" sev="2" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="SERIAL.DUID" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Implement Externalizable instead of Serializable" id="SERIAL.EZEE" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid declaring &quot;transient&quot; fields in non-serializable classes" id="SERIAL.FT" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid re-initializing fields in the 'readExternal()' method of 'Externalizable' classes" id="SERIAL.IRX" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Define a &quot;readResolve&quot; method for all instances of Serializable types" id="SERIAL.RRSC" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="SERIAL.RWAF" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents" id="SERIAL.SCBNP" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Do not declare SerialVersionUID in classes that do not implement Serializable" id="SERIAL.SRLZ" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Do not declare the 'readObject()' method as &quot;synchronized&quot;" id="SERIAL.SROS" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Validate objects before deserialization" id="SERIAL.VOBD" sev="3" total="0"/>
         </RulesList>
         <SeverityList>
            <Severity authTot="1;" authUrg="1;" id="1" total="1"/>
            <Severity authTot="6;" authUrg="6;" id="2" total="6"/>
            <Severity authTot="26;" authUrg="26;" id="3" total="26"/>
            <Severity authTot="12;" authUrg="12;" id="4" total="12"/>
            <Severity authTot="6;" authUrg="5;" id="5" total="6"/>
         </SeverityList>
      </Rules>
      
  <Supps/>

      
  <StdViols>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.003215.MCH" lnHash="-640264574" pkg="" rule.header="Include a meaningful file header comment in every source file" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="36643865-75a8-3550-9977-c809b700a16c" locEndPos="44" urgent="true" locEndLn="1" goals="1," locStartln="1" sev="3" locRef="1" ctx="1,0|2,0" tool="jtest" lineHash="-640264574" unbViolId="1fe05dd0-360b-3538-9098-54eb4bf6f430" locType="sr" hash="1741334343"/>
    <StdViol msg="Compilation unit should be placed inside a non-default package" ln="1" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="CODSTA.ORG.UNDPN" lnHash="-640264574" pkg="" rule.header="Ensure all types have a non default package name" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c8debbfd-4f3f-3b59-983e-6a6329b1f0d2" locEndPos="46" urgent="true" locEndLn="1" goals="1," locStartln="1" sev="3" locRef="1" ctx="1,0|2,0" tool="jtest" lineHash="-640264574" unbViolId="f396f966-923d-34d5-85ca-b0e2f4f071dd" locType="sr" hash="1741334343"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.003215.BLCD" lnHash="707665141" pkg="" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="26f87d61-dfe0-3542-bac1-65dff943c9ae" locEndPos="2" urgent="true" locEndLn="3" goals="1," locStartln="3" sev="3" locRef="1" ctx="3,0|4,0" tool="jtest" lineHash="707665141" unbViolId="cb12cb84-b481-3f59-b9ab-1faae3c0f4cb" locType="sr" hash="1741334343"/>
    <StdViol msg="Globally unused &quot;public&quot; class: Calculator" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="GLOBAL.UPPC" lnHash="707665141" pkg="" rule.header="Avoid globally unused &quot;public/protected&quot; types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f7d90cf8-6bae-3cc5-a649-b7790b5cb2a5" locEndPos="23" urgent="true" locEndLn="3" goals="1," locStartln="3" sev="4" locRef="1" ctx="3,0|4,0" tool="jtest" lineHash="707665141" unbViolId="0e5a430d-a73a-3c6a-b710-0c6a85b723e7" locType="sr" hash="1741334343"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: Calculator" ln="3" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="CODSTA.POD.DCTOR" lnHash="707665141" pkg="" rule.header="Define a no argument constructor whenever possible" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="f9cdd8f8-3fb4-3743-ab7a-30364622e34a" locEndPos="23" urgent="true" locEndLn="3" goals="1," locStartln="3" sev="5" locRef="1" ctx="3,0|4,0" tool="jtest" lineHash="707665141" unbViolId="b40811fd-7049-3467-ad00-892691c8f73c" locType="sr" hash="1741334343"/>
    <StdViol msg="Constant value should be declared &quot;final&quot;: screen" ln="5" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="CODSTA.READ.FF" lnHash="-2008629378" pkg="" rule.header="Declare &quot;private&quot; constant fields &quot;final&quot;" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ae839aa8-176b-3b39-8264-ef85fdaccd6e" locEndPos="25" urgent="true" locEndLn="5" goals="1," locStartln="5" sev="3" locRef="1" ctx="5,0|6,0" tool="jtest" lineHash="-2008629378" unbViolId="e4a7c1b5-2ec9-316a-aa81-21bccd7f24ad" locType="sr" hash="1741334343"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.003215.U2BL" lnHash="1262617896" pkg="" rule.header="Enforce number of blank line(s) between major sections" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c6904a6f-d65d-3eb3-9407-22137f3c72ea" locEndPos="34" urgent="true" locEndLn="6" goals="1," locStartln="6" sev="3" locRef="1" ctx="6,5|10,5" tool="jtest" lineHash="1262617896" unbViolId="c2aa625e-2563-3ff4-9998-a5d27e3d17f3" locType="sr" hash="1741334343"/>
    <StdViol msg="Globally unused &quot;public&quot; method: add()" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="GLOBAL.UPPM" lnHash="1262617896" pkg="" rule.header="Avoid globally unused &quot;public/protected&quot; methods" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="31a6379f-5219-31ba-a3af-e480b8f8d7a2" locEndPos="18" urgent="true" locEndLn="6" goals="1," locStartln="6" sev="4" locRef="1" ctx="6,5|10,5" tool="jtest" lineHash="1262617896" unbViolId="1400d908-3dbe-3068-8b5e-b58744b2d6a3" locType="sr" hash="1741334343"/>
    <StdViol msg="Formal parameter 'a' is not declared as final" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="CODSTA.BP.FPF" lnHash="1262617896" pkg="" rule.header="Declare all formal parameters as &quot;final&quot;" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c152b138-eab0-3325-81ff-c522c3ea9c80" locEndPos="24" urgent="true" locEndLn="6" goals="1," locStartln="6" sev="3" locRef="1" ctx="6,5|10,5" tool="jtest" lineHash="1262617896" unbViolId="93cc6e5e-6625-3ec4-8b27-1aecc921bac3" locType="sr" hash="1741334343"/>
    <StdViol msg="Formal parameter 'b' is not declared as final" ln="6" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="CODSTA.BP.FPF" lnHash="1262617896" pkg="" rule.header="Declare all formal parameters as &quot;final&quot;" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="34a2b4b3-adb9-3295-b728-5a77fa5c41d2" locEndPos="31" urgent="true" locEndLn="6" goals="1," locStartln="6" sev="3" locRef="1" ctx="6,5|10,5" tool="jtest" lineHash="1262617896" unbViolId="257a17fc-a5e9-36be-afa5-223a1782f92e" locType="sr" hash="1741334343"/>
    <StdViol msg="Local constant not declared &quot;final&quot;: result" ln="7" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="CODSTA.READ.FLV" lnHash="1928371266" pkg="" rule.header="Declare constant local variables &quot;final&quot;" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d48f408a-4b32-3194-91b5-d82f285c4187" locEndPos="18" urgent="true" locEndLn="7" goals="1," locStartln="7" sev="3" locRef="1" ctx="6,5|10,5" tool="jtest" lineHash="1928371266" unbViolId="a7d87f14-8d1a-384d-a745-82102659d476" locType="sr" hash="1741334343"/>
    <StdViol msg="The declaration of the local variable 'result' is not followed by a comment" ln="7" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="CODSTA.READ.CLV" lnHash="1928371266" pkg="" rule.header="Comment local variables" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="34df1122-9d94-3978-b332-4477444421a3" locEndPos="18" urgent="true" locEndLn="7" goals="1," locStartln="7" sev="5" locRef="1" ctx="6,5|10,5" tool="jtest" lineHash="1928371266" unbViolId="94be6fd9-fb87-33c7-8cef-e3100454d716" locType="sr" hash="1741334343"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.003215.BLCD" lnHash="-394619638" pkg="" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1e7ee0da-25cc-3fdf-ba3a-ebc54eba60de" locEndPos="6" urgent="true" locEndLn="12" goals="1," locStartln="12" sev="3" locRef="1" ctx="12,0|13,0" tool="jtest" lineHash="-394619638" unbViolId="f0f46ef9-8983-389d-93e4-d6f29dd47af5" locType="sr" hash="1741334343"/>
    <StdViol msg="Elements in 'Calculator' not ordered appropriately, first violation: member class 'Screen' at line 12 should be placed before field 'screen' at line 5" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="CODSTA.ORG.FO" lnHash="-394619638" pkg="" rule.header="Order class elements appropriately" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ff5e4405-5152-337c-80e0-ea1ae3d021f6" locEndPos="30" urgent="true" locEndLn="12" goals="1," locStartln="12" sev="3" locRef="1" ctx="12,0|13,0" tool="jtest" lineHash="-394619638" unbViolId="e934d844-8a2e-33e1-8b2e-281376a6237c" locType="sr" hash="1741334343"/>
    <StdViol msg="Class 'Calculator.Screen' should be declared &quot;private&quot;" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="GLOBAL.DPPC" lnHash="-394619638" pkg="" rule.header="Declare &quot;public/protected&quot; types as inaccessible as possible" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="deddc407-97c9-3908-bb0a-578cb1885b00" locEndPos="30" urgent="true" locEndLn="12" goals="1," locStartln="12" sev="4" locRef="1" ctx="12,0|13,0" tool="jtest" lineHash="-394619638" unbViolId="83054ec2-7e4f-3ee5-8fff-534daefc0aef" locType="sr" hash="1741334343"/>
    <StdViol msg="Class 'Calculator.Screen' should be declared &quot;final&quot;" ln="12" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="GLOBAL.SPPC" lnHash="-394619638" pkg="" rule.header="Declare a &quot;public/protected&quot; &quot;class&quot; &quot;final&quot; if it is not subclassed" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ddc003a8-7068-3c8e-b1c4-4d2b2dbb8c2d" locEndPos="30" urgent="true" locEndLn="12" goals="1," locStartln="12" sev="5" locRef="1" ctx="12,0|13,0" tool="jtest" lineHash="-394619638" unbViolId="ec270a5c-a665-31bd-bad4-6f65570f6c7c" locType="sr" hash="1741334343"/>
    <StdViol msg="Use 1 blank line before every field declaration (or corresponding Javadoc)" ln="13" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.003215.U2BL" lnHash="1173913624" pkg="" rule.header="Enforce number of blank line(s) between major sections" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c7717484-2937-3c1b-a8c3-48f69477dafb" locEndPos="38" urgent="true" locEndLn="13" goals="1," locStartln="13" sev="3" locRef="1" ctx="13,0|14,0" tool="jtest" lineHash="1173913624" unbViolId="382ec03c-cf07-3520-a2f4-53a8d1172211" locType="sr" hash="1741334343"/>
    <StdViol msg="'public' constructor declared" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="CODSTA.BP.CMUTA" lnHash="1528369737" pkg="" rule.header="Avoid 'public' or 'protected' constructors for immutable classes" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3f9b2280-48ae-3912-96ec-c66077b8f9b0" locEndPos="21" urgent="true" locEndLn="15" goals="1," locStartln="15" sev="3" locRef="1" ctx="15,0|16,0" tool="jtest" lineHash="1528369737" unbViolId="b74762be-0b8b-38fc-a6a4-bfe6c5c7689a" locType="sr" hash="1741334343"/>
    <StdViol msg="Constructor 'Screen()' should be declared &quot;private&quot;" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="GLOBAL.DPPM" lnHash="1528369737" pkg="" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fe820765-0b94-3848-90b5-cad7717ac18e" locEndPos="21" urgent="true" locEndLn="15" goals="1," locStartln="15" sev="4" locRef="1" ctx="15,0|16,0" tool="jtest" lineHash="1528369737" unbViolId="31806bb3-7a30-3102-977c-69d6517a8d9f" locType="sr" hash="1741334343"/>
    <StdViol msg="Formal parameter 'brightness' is not declared as final" ln="15" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="CODSTA.BP.FPF" lnHash="1528369737" pkg="" rule.header="Declare all formal parameters as &quot;final&quot;" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c76d1d65-c38c-3502-a2e4-a532d5fe56dc" locEndPos="43" urgent="true" locEndLn="15" goals="1," locStartln="15" sev="3" locRef="1" ctx="15,0|16,0" tool="jtest" lineHash="1528369737" unbViolId="2c218760-5831-3972-85a8-8ddaa21bb9dd" locType="sr" hash="1741334343"/>
    <StdViol msg="Method 'showResult()' should be declared &quot;private&quot;" ln="19" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="GLOBAL.DPPM" lnHash="-1397540739" pkg="" rule.header="Declare &quot;public/protected&quot; methods as inaccessible as possible" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="39514141-61d3-3de7-9add-5fbf022856cc" locEndPos="30" urgent="true" locEndLn="19" goals="1," locStartln="19" sev="4" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397540739" unbViolId="94d36f90-34c3-3e88-83a6-0ccadc106260" locType="sr" hash="1741334343"/>
    <StdViol msg="Method 'showResult()' should be declared &quot;final&quot;" ln="19" locFile="/javaprojecttemplate/src/main/java/Calculator.java" locStartln="19" sev="5" auth="lyao" locRef="1" ctx="19,9|21,9" rule="GLOBAL.SPPM" lnHash="-1397540739" pkg="" rule.header="Declare a &quot;public/protected&quot; method &quot;final&quot; if it is not overridden" tool="jtest" lineHash="-1397540739" unbViolId="23d8485b-e3ad-3435-8113-9675013346ac" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bf8184ad-685d-37b3-ac93-1d4ee3a3ce20" locEndPos="30" locType="sr" hash="1741334343" locEndLn="19" goals="0,"/>
    <StdViol msg="Formal parameter 'result' is not declared as final" ln="19" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="CODSTA.BP.FPF" lnHash="-1397540739" pkg="" rule.header="Declare all formal parameters as &quot;final&quot;" locStartPos="35" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c3bc7b83-1730-3b3d-8b05-3bcf80d52a18" locEndPos="41" urgent="true" locEndLn="19" goals="1," locStartln="19" sev="3" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397540739" unbViolId="d6a6faeb-d54e-34f9-bb1f-890f120d9e1b" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.000650.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="83a08636-b083-32d3-991d-b9861ff78f91" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="2" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="6d247978-dda7-3882-9fd8-7c3b549114b1" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.001460.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6e71e6e9-241a-3384-af49-70aa716926ff" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="2" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="d7b109af-bf13-3840-a1f5-3efe3e98ad1f" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.002460.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="20b3d107-2cb8-370e-ad49-5de547c457b1" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="2" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="52d88851-f34d-3b80-990f-cd97fe45e090" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.002470.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="101c96ce-725a-3133-a655-4fb5ea889bea" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="2" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="6bdbf96f-8cbb-31d4-9025-785a65ef9cb9" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.002480.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="657c55ed-109b-3664-bcd9-477406c850f3" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="2" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="91c9045d-fb0b-3791-957b-99b0cd8d1d39" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.002570.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="02b725dc-2533-3725-8344-2ef6dc7278d6" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="2" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="7a2bda87-6b4d-3c95-af93-fab406cd54a9" locType="sr" hash="1741334343"/>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.002440.SIO" lnHash="-1397641892" pkg="" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6a31ad54-a1c5-393e-a86d-3dfd0127dae0" locEndPos="58" urgent="true" locEndLn="20" goals="1," locStartln="20" sev="1" locRef="1" ctx="19,9|21,9" tool="jtest" lineHash="-1397641892" unbViolId="01008fbe-6707-3898-88b8-e1eea761bf0c" locType="sr" hash="1741334343"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="23" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.003215.BLCD" lnHash="-619022508" pkg="" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="df4a6612-e918-3ca4-825f-42e1b2996583" locEndPos="10" urgent="true" locEndLn="23" goals="1," locStartln="23" sev="3" locRef="1" ctx="23,0|24,0" tool="jtest" lineHash="-619022508" unbViolId="af1685bc-ee06-3f4d-bc51-4f6116f79851" locType="sr" hash="1741334343"/>
    <StdViol msg="Elements in 'Screen' not ordered appropriately, first violation: member enum declaration 'Brightness' at line 23 should be placed before field 'brightness' at line 13" ln="23" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="CODSTA.ORG.FO" lnHash="-619022508" pkg="" rule.header="Order class elements appropriately" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c98f32af-b772-37da-8d7b-9d43967faa65" locEndPos="30" urgent="true" locEndLn="23" goals="1," locStartln="23" sev="3" locRef="1" ctx="23,0|24,0" tool="jtest" lineHash="-619022508" unbViolId="92817c42-7f0a-3afa-b985-5c7486a0f190" locType="sr" hash="1741334343"/>
    <StdViol msg="Enum 'Calculator.Screen.Brightness' should be declared &quot;private&quot;" ln="23" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="GLOBAL.DPPC" lnHash="-619022508" pkg="" rule.header="Declare &quot;public/protected&quot; types as inaccessible as possible" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="85e7dd08-89cf-38e5-b63e-9324a66780a8" locEndPos="30" urgent="true" locEndLn="23" goals="1," locStartln="23" sev="4" locRef="1" ctx="23,0|24,0" tool="jtest" lineHash="-619022508" unbViolId="fef568f6-468a-3fca-97a3-3a39a554214f" locType="sr" hash="1741334343"/>
    <StdViol msg="Use 1 blank line before every enum constant declaration (or corresponding Javadoc)" ln="24" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.003215.U2BL" lnHash="-1760446347" pkg="" rule.header="Enforce number of blank line(s) between major sections" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3d9f2c08-c5be-313a-aaec-32a2785543f1" locEndPos="29" urgent="true" locEndLn="24" goals="1," locStartln="24" sev="3" locRef="1" ctx="24,0|25,0" tool="jtest" lineHash="-1760446347" unbViolId="82382500-bb36-3112-b94d-ac17de846ed0" locType="sr" hash="1741334343"/>
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="24" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="APSC_DV.003215.U2BL" lnHash="-1760446347" pkg="" rule.header="Enforce number of blank line(s) between major sections" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="340292f1-df59-3a37-b14c-e6db40f3898c" locEndPos="29" urgent="true" locEndLn="24" goals="1," locStartln="24" sev="3" locRef="1" ctx="24,0|25,0" tool="jtest" lineHash="-1760446347" unbViolId="1fadc10a-3ba1-3057-adb6-56448a6e4fa3" locType="sr" hash="1741334343"/>
    <StdViol msg="Enum constant not directly used: HIGH" ln="24" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="GLOBAL.UEC" lnHash="-1760446347" pkg="" rule.header="Avoid globally unused enum constants" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4c7990c6-0352-31a0-8522-5761358e344d" locEndPos="16" urgent="true" locEndLn="24" goals="1," locStartln="24" sev="4" locRef="1" ctx="24,0|25,0" tool="jtest" lineHash="-1760446347" unbViolId="b02b6211-72e4-3ac2-ab75-3836c18ccdaf" locType="sr" hash="1741334343"/>
    <StdViol msg="Enum constant not directly used: LOW" ln="24" locFile="/javaprojecttemplate/src/main/java/Calculator.java" auth="lyao" rule="GLOBAL.UEC" lnHash="-1760446347" pkg="" rule.header="Avoid globally unused enum constants" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a3ba5672-646c-3057-a6f9-f9e6c86bc7de" locEndPos="29" urgent="true" locEndLn="24" goals="1," locStartln="24" sev="4" locRef="1" ctx="24,0|25,0" tool="jtest" lineHash="-1760446347" unbViolId="26abdd20-b526-3312-b742-d0ad52370b7a" locType="sr" hash="1741334343"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" auth="lyao" rule="APSC_DV.003215.MCH" lnHash="1284421354" pkg="com.parasoft" rule.header="Include a meaningful file header comment in every source file" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b161164a-49a4-3a89-a480-52dab1ca620c" locEndPos="21" urgent="true" locEndLn="1" goals="1," locStartln="1" sev="3" locRef="2" ctx="1,0|2,0" tool="jtest" lineHash="1284421354" unbViolId="b8ff9915-b083-3ebf-8e1b-98d02a18ab39" locType="sr" hash="-662881149"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" auth="lyao" rule="APSC_DV.003215.BLCD" lnHash="-1890058929" pkg="com.parasoft" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="28f33e9d-c5cc-3d39-8ab5-1e290c40ada3" locEndPos="2" urgent="true" locEndLn="5" goals="1," locStartln="5" sev="3" locRef="2" ctx="5,0|6,0" tool="jtest" lineHash="-1890058929" unbViolId="ffb72745-a461-3f21-a08a-1a0938654e4a" locType="sr" hash="-662881149"/>
    <StdViol msg="Globally unused &quot;public&quot; class: com.parasoft.Convertor" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" auth="lyao" rule="GLOBAL.UPPC" lnHash="-1890058929" pkg="com.parasoft" rule.header="Avoid globally unused &quot;public/protected&quot; types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="56703cf3-f02a-3064-8e51-a069148364c0" locEndPos="22" urgent="true" locEndLn="5" goals="1," locStartln="5" sev="4" locRef="2" ctx="5,0|6,0" tool="jtest" lineHash="-1890058929" unbViolId="2dfd26fc-c509-38d2-811b-2c1feed96c6f" locType="sr" hash="-662881149"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: Convertor" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" auth="lyao" rule="CODSTA.POD.DCTOR" lnHash="-1890058929" pkg="com.parasoft" rule.header="Define a no argument constructor whenever possible" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="6746c372-c36b-3dbc-a50b-3351e73def90" locEndPos="22" urgent="true" locEndLn="5" goals="1," locStartln="5" sev="5" locRef="2" ctx="5,0|6,0" tool="jtest" lineHash="-1890058929" unbViolId="8d9a43b7-9fa5-3aa0-8bb3-fa9d40ea3feb" locType="sr" hash="-662881149"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" auth="lyao" rule="APSC_DV.003215.U2BL" lnHash="-750708491" pkg="com.parasoft" rule.header="Enforce number of blank line(s) between major sections" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4f160a83-8944-35fd-9e91-9f54e4f47409" locEndPos="42" urgent="true" locEndLn="6" goals="1," locStartln="6" sev="3" locRef="2" ctx="6,5|8,5" tool="jtest" lineHash="-750708491" unbViolId="9168eba1-a7a7-3f4a-bba6-a0e30d705778" locType="sr" hash="-662881149"/>
    <StdViol msg="Globally unused &quot;public&quot; method: convertToString()" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" auth="lyao" rule="GLOBAL.UPPM" lnHash="-750708491" pkg="com.parasoft" rule.header="Avoid globally unused &quot;public/protected&quot; methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9e3556a4-2927-3f74-9266-d2dc11449416" locEndPos="33" urgent="true" locEndLn="6" goals="1," locStartln="6" sev="4" locRef="2" ctx="6,5|8,5" tool="jtest" lineHash="-750708491" unbViolId="c2d86cf3-ffc4-3c8b-9bf6-e7238bf7c3d2" locType="sr" hash="-662881149"/>
    <StdViol msg="Formal parameter 'a' is not declared as final" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" auth="lyao" rule="CODSTA.BP.FPF" lnHash="-750708491" pkg="com.parasoft" rule.header="Declare all formal parameters as &quot;final&quot;" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5928c59a-ab93-3ea5-8e82-0929c61463c9" locEndPos="39" urgent="true" locEndLn="6" goals="1," locStartln="6" sev="3" locRef="2" ctx="6,5|8,5" tool="jtest" lineHash="-750708491" unbViolId="092ad7c3-3665-3527-823c-5cddc950ca2b" locType="sr" hash="-662881149"/>
    <StdViol msg="This source file does not include a file header comment" ln="1" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" auth="lyao" rule="APSC_DV.003215.MCH" lnHash="1607033717" pkg="com.parasoft.another" rule.header="Include a meaningful file header comment in every source file" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0c780748-28f6-38c1-8fab-e6b3fdd81dec" locEndPos="29" urgent="true" locEndLn="1" goals="1," locStartln="1" sev="3" locRef="3" ctx="1,0|2,0" tool="jtest" lineHash="1607033717" unbViolId="7ae801b9-8f8e-30fd-af5c-03c6ad5985a0" locType="sr" hash="469181545"/>
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" auth="lyao" rule="APSC_DV.003215.BLCD" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e101e296-a3fa-31d5-b766-78557fae7d0d" locEndPos="2" urgent="true" locEndLn="5" goals="1," locStartln="5" sev="3" locRef="3" ctx="5,0|6,0" tool="jtest" lineHash="-1890058929" unbViolId="b2362565-74bd-3b1a-8b88-46f517a7dd57" locType="sr" hash="469181545"/>
    <StdViol msg="Globally unused &quot;public&quot; class: com.parasoft.another.Convertor" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" auth="lyao" rule="GLOBAL.UPPC" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Avoid globally unused &quot;public/protected&quot; types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="de3cdb74-38af-3d15-9936-ff006e415a91" locEndPos="22" urgent="true" locEndLn="5" goals="1," locStartln="5" sev="4" locRef="3" ctx="5,0|6,0" tool="jtest" lineHash="-1890058929" unbViolId="2f273cea-3cff-30d0-9c8b-3911538becad" locType="sr" hash="469181545"/>
    <StdViol msg="&quot;class&quot; missing a no argument constructor: Convertor" ln="5" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" auth="lyao" rule="CODSTA.POD.DCTOR" lnHash="-1890058929" pkg="com.parasoft.another" rule.header="Define a no argument constructor whenever possible" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="46f2d722-fd00-3eca-a3cd-187e68d06092" locEndPos="22" urgent="true" locEndLn="5" goals="1," locStartln="5" sev="5" locRef="3" ctx="5,0|6,0" tool="jtest" lineHash="-1890058929" unbViolId="24ae47c9-6f43-34db-872d-717b844f9097" locType="sr" hash="469181545"/>
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" auth="lyao" rule="APSC_DV.003215.U2BL" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Enforce number of blank line(s) between major sections" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6ea7804b-966b-34dc-9430-b173f1ad9fc9" locEndPos="42" urgent="true" locEndLn="6" goals="1," locStartln="6" sev="3" locRef="3" ctx="6,5|8,5" tool="jtest" lineHash="-750708491" unbViolId="300486f3-5fb5-33b5-be36-0226607b3ba0" locType="sr" hash="469181545"/>
    <StdViol msg="Globally unused &quot;public&quot; method: convertToString()" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" auth="lyao" rule="GLOBAL.UPPM" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Avoid globally unused &quot;public/protected&quot; methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="adab2784-5ade-3958-a973-c9a0b21c4796" locEndPos="33" urgent="true" locEndLn="6" goals="1," locStartln="6" sev="4" locRef="3" ctx="6,5|8,5" tool="jtest" lineHash="-750708491" unbViolId="27935dea-ba5e-3d5a-b0e1-c9ed728f3a0b" locType="sr" hash="469181545"/>
    <StdViol msg="Formal parameter 'a' is not declared as final" ln="6" locFile="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" auth="lyao" rule="CODSTA.BP.FPF" lnHash="-750708491" pkg="com.parasoft.another" rule.header="Declare all formal parameters as &quot;final&quot;" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1a8ec52e-c761-3143-bf39-401ed0b84038" locEndPos="39" urgent="true" locEndLn="6" goals="1," locStartln="6" sev="3" locRef="3" ctx="6,5|8,5" tool="jtest" lineHash="-750708491" unbViolId="fa8a025f-3dcd-3d5f-98a8-580807238d4f" locType="sr" hash="469181545"/>
  </StdViols>

      <TestedFilesDetails>
         <Total name="Total (Suppressed)" supp="0" total="51">
            <Project id="javaprojecttemplate" name="javaprojecttemplate" supp="0" total="51">
               <Res name="src" supp="0" total="51">
                  <Res name="main" supp="0" total="51">
                     <Res name="java" supp="0" total="51">
                        <Res loc="/javaprojecttemplate/src/main/java/Calculator.java" locRef="1" locType="sr" name="Calculator.java" supp="0" total="37"/>
                        <Res name="com" supp="0" total="14">
                           <Res name="parasoft" supp="0" total="14">
                              <Res loc="/javaprojecttemplate/src/main/java/com/parasoft/Convertor.java" locRef="2" locType="sr" name="Convertor.java" supp="0" total="7"/>
                              <Res name="another" supp="0" total="7">
                                 <Res loc="/javaprojecttemplate/src/main/java/com/parasoft/another/Convertor.java" locRef="3" locType="sr" name="Convertor.java" supp="0" total="7"/>
                              </Res>
                           </Res>
                        </Res>
                     </Res>
                  </Res>
               </Res>
            </Project>
         </Total>
      </TestedFilesDetails>
   </CodingStandards>
   <Statistics>
      
   </Statistics>
</ResultsSession>